<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SandcastleBuilder.Components</name>
    </assembly>
    <members>
        <member name="T:SandcastleBuilder.Utils.Constants">
            <summary>
            This class holds a set of constants that define various application
            values such as the application name, common data folder, etc.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Constants.CompanyName">
            <summary>The company name</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Constants.AppName">
            <summary>The application name</summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Constants.ProgramDataFolder">
            <summary>
            The application folder in which the component and user data files are stored.
            </summary>
            <remarks>This folder will be located under the <see cref="T:System.Environment.SpecialFolder">CommonApplicationData</see>
            or <see cref="T:System.Environment.SpecialFolder">LocalApplicationData</see> folder.</remarks>
        </member>
        <member name="F:SandcastleBuilder.Utils.Constants.ItemTemplates">
            <summary>
            This folder is located under the <see cref="T:System.Environment.SpecialFolder">LocalApplicationData</see>
            folder and contains user-defined item templates that can be added to a project.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Constants.ConceptualTemplates">
            <summary>
            This folder is located under the <see cref="T:System.Environment.SpecialFolder">LocalApplicationData</see>
            folder and contains user-defined conceptual content topic templates that can be added to a project.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Constants.ComponentsAndPlugInsFolder">
            <summary>
            This folder is located under the <see cref="T:System.Environment.SpecialFolder">CommonApplicationData</see>
            folder and contains custom build components that can be added to a project.
            </summary>
        </member>
        <member name="F:SandcastleBuilder.Utils.Constants.PresentationStylesFolder">
            <summary>
            This folder is located under the <see cref="T:System.Environment.SpecialFolder">CommonApplicationData</see>
            folder and contains third-party presentation styles that can be used by a project.
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.CachedCopyFromIndexComponent">
            <summary>
            This build component is obsolete and will be removed in a future release.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.CachedCopyFromIndexComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">This is thrown if
            an error is detected in the configuration.</exception>
        </member>
        <member name="M:SandcastleBuilder.Components.CachedCopyFromIndexComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This component is obsolete and will do nothing.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="T:SandcastleBuilder.Components.CachedResolveReferenceLinksComponent">
            <summary>
            This build component is obsolete and will be removed in a future release.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.CachedResolveReferenceLinksComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>This component is obsolete and will be removed in a future release.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.CachedResolveReferenceLinksComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This component is obsolete and will do nothing.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="T:SandcastleBuilder.Components.CodeBlockComponent">
             <summary>
             This build component is used to search for &lt;code&gt; XML comment tags and colorize the code within
             them.  It can also include code from an external file or a region within the file.
             </summary>
             <remarks>The colorizer files are only copied once and only if code is actually colorized.  If the files
             already exist (i.e. additional content has replaced them), they are not copied either.  That way, you
             can customize the color stylesheet as you see fit without modifying the default stylesheet.</remarks>
             <example>
             <code lang="xml" title="Example configuration">
             &lt;!-- Code block component configuration.  This must appear before
                  the TransformComponent. --&gt;
             &lt;component type="SandcastleBuilder.Components.CodeBlockComponent"
               assembly="C:\SandcastleBuilder\SandcastleBuilder.Components.dll"&gt;
                 &lt;!-- Base path for relative filenames in source
                      attributes (optional). --&gt;
                 &lt;basePath value="..\SandcastleComponents" /&gt;
            
                 &lt;!-- Base output paths for the files (required).  These should
                      match the parent folder of the output path of the HTML files
                      used in the SaveComponent instances. --&gt;
                 &lt;outputPaths&gt;
                   &lt;path value="Output\HtmlHelp1\" /&gt;
                   &lt;path value="Output\MSHelp2\" /&gt;
                   &lt;path value="Output\MSHelpViewer\" /&gt;
                   &lt;path value="Output\Website\" /&gt;
                 &lt;/outputPaths&gt;
                 
                 &lt;!-- Allow missing source files (Optional).  If omitted,
                      it will generate errors if referenced source files
                      are missing. --&gt;
                 &lt;allowMissingSource value="false" /&gt;
             
                 &lt;!-- Remove region markers from imported code blocks.  If omitted,
                      region markers in imported code blocks are left alone. --&gt;
                 &lt;removeRegionMarkers value="false" /&gt;
            
                 &lt;!-- Code colorizer options (required).
                   Attributes:
                     Language syntax configuration file (required)
                     XSLT stylesheet file (required)
                     CSS stylesheet file (required)
                     Script file (required)
                     Disabled (optional, leading whitespace normalization only)
                     Default language (optional)
                     Enable line numbering (optional)
                     Enable outlining (optional)
                     Keep XML comment "see" tags within the code (optional)
                     Tab size for unknown languages (optional, 0 = use default)
                     Use language name as default title (optional) --&gt;
                 &lt;colorizer syntaxFile="highlight.xml" styleFile="highlight.xsl"
                   stylesheet="highlight.css" scriptFile="highlight.js"
                   disabled="false" language="cs" numberLines="false" outlining="false"
                   keepSeeTags="false" tabSize="0" defaultTitle="true" /&gt;
             &lt;/component&gt;
             </code>
            
             <code lang="xml" title="Examples as used in XML comments.">
             &lt;example&gt;
             A basic code block that uses the configuration defaults:
             &lt;code&gt;
             /// Code to colorize
             &lt;/code&gt;
            
             Override options with block-specific options:
             &lt;code lang="xml" numberLines="true" outlining="false" tabSize="8" &gt;
                 &amp;lt;XmlTags/&amp;gt;
             &lt;/code&gt;
            
             An entire external file or a delimited region from it can be
             included.  This allows you to compile your example code externally
             to ensure that it is still valid and saves you from maintaining it
             in two places.
            
             Retrieve all code from an external file.  Use VB.NET syntax.
             &lt;code source="..\Examples\WholeDemo.vb" lang="vbnet"/&gt;
            
             Retrieve a specific #region from an external file.
             &lt;code source="..\Examples\SeveralExamples.vb"
                 region="Example 1" lang="vbnet"/&gt;
             
             Keep &lt;see&gt; tags within comments so that they are converted to
             links to the help topics.
             &lt;code keepSeeTags="true"&gt;
             int x = this.&lt;see cref="CountStuff"&gt;CountStuff&lt;/see&gt;(true);
             
             string value = this.&lt;see cref="System.Object.ToString"&gt;
             &lt;code&gt;
            
             &lt;example&gt;
             </code>
             </example>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>See the <see cref="T:SandcastleBuilder.Components.CodeBlockComponent"/> class topic for an example of the configuration and
            usage.</remarks>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">This is thrown if an error is detected in the
            configuration.</exception>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This is implemented to perform the code colorization.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockComponent.LoadNestedCodeBlocks(System.String,System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathExpression,Microsoft.Ddue.Tools.MessageLevel)">
            <summary>
            This is used to load a set of nested code blocks from external files
            </summary>
            <param name="key">The topic key</param>
            <param name="navCode">The node in which to replace the nested code blocks</param>
            <param name="nestedCode">The XPath expression used to locate the nested code blocks.</param>
            <param name="msgLevel">The message level for missing source code</param>
            <returns>The HTML encoded blocks extracted from the files as a single code block</returns>
            <remarks>Only source and region attributes are used.  All other attributes are obtained from the
            parent code block.  Text nodes are created to replace the nested code tags so that any additional
            text in the parent code block is also retained.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockComponent.LoadCodeBlock(System.String,System.Xml.XmlNode,Microsoft.Ddue.Tools.MessageLevel)">
            <summary>
            This is used to load a code block from an external file.
            </summary>
            <param name="key">The topic key</param>
            <param name="code">The node containing the attributes</param>
            <param name="msgLevel">The message level for missing source code</param>
            <returns>The HTML encoded block extracted from the file.</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockComponent.TransformComponent_TopicTransformed(System.Object,System.EventArgs)">
            <summary>
            This is used to complete the process by inserting the colorized code within the topic after it has
            been transformed to HTML.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
            <remarks>A two-phase approach is needed as the HTML for the colorized code wouldn't make it through
            the conceptual content XSL transformations.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.CodeBlockComponent.ConfigureComponent(System.String)">
            <summary>
            This static method is used by the Sandcastle Help File Builder to let the component perform its own
            configuration.
            </summary>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
        </member>
        <member name="T:SandcastleBuilder.Components.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.Properties.Resources.CreateSandcastleDB">
             <summary>
               Looks up a localized string similar to -- NOTE: Change the file locations if necessary
            CREATE DATABASE [Sandcastle]
             ON  PRIMARY
            ( NAME = N&apos;Sandcastle&apos;, FILENAME = N&apos;C:\Databases\Sandcastle.mdf&apos; )
             LOG ON
            ( NAME = N&apos;Sandcastle_log&apos;, FILENAME = N&apos;C:\Databases\Sandcastle_log.ldf&apos; )
            GO
            
            USE [Sandcastle]
            GO
            
            -- MSDN content IDs table
            CREATE TABLE [dbo].[ContentIds](
            	[TargetKey] [varchar](768) NOT NULL,
            	[ContentId] [varchar](12) NULL,
             CONSTRAINT [PK_ContentIds] PRIMARY KEY CLUSTERED
            (
            	[TargetKey] ASC
            ) ON [PRIMARY]
            ) ON [PRIMAR [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.UI.CodeBlockConfigDlg">
            <summary>
            This form is used to configure the settings for the <see cref="T:SandcastleBuilder.Components.CodeBlockComponent"/>
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.CodeBlockConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.CodeBlockConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.CodeBlockConfigDlg.lnkCodePlexSHFB_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the CodePlex home page of the Sandcastle Help File Builder
            project.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.CodeBlockConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.CodeBlockConfigDlg.btnSelectFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Select the base source folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.CodeBlockConfigDlg.SelectFile_Click(System.Object,System.EventArgs)">
            <summary>
            Select one of the file types
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Components.UI.CodeBlockConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.CodeBlockConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.CodeBlockConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.UI.CodeBlockConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.ESentCopyFromIndexComponent">
            <summary>
            This is a version of the <c>CopyFromIndexComponent</c> that stores the index data in one or more
            persistent ESENT databases.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.ESentCopyFromIndexComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>This component is obsolete and will be removed in a future release.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.ESentCopyFromIndexComponent.CreateIndex(System.Xml.XPath.XPathNavigator)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.ESentCopyFromIndexComponent.ConfigureReflectionIndexCache(System.String)">
            <summary>
            This static method is used by the Sandcastle Help File Builder to let the component perform its own
            configuration (reflection index).
            </summary>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.ESentCopyFromIndexComponent.ConfigureCommentsIndexCache(System.String)">
            <summary>
            This static method is used by the Sandcastle Help File Builder to let the component perform its own
            configuration (comments index).
            </summary>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
        </member>
        <member name="T:SandcastleBuilder.Components.Commands.ESentIndexedCache">
            <summary>
            This is a version of the <c>InMemoryIndexCache</c> that adds the ability to store index information in
            one or more persistent ESENT databases.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.Commands.ESentIndexedCache.#ctor(Microsoft.Ddue.Tools.CopyFromIndexComponent,System.Xml.XmlNamespaceManager,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="component">The <see cref="T:Microsoft.Ddue.Tools.CopyFromIndexComponent"/> to which the indexed cache belongs</param>
            <param name="context">A context to use with the key and value XPath expressions</param>
            <param name="configuration">The configuration to use</param>
        </member>
        <member name="M:SandcastleBuilder.Components.Commands.ESentIndexedCache.AddDocuments(System.Xml.XPath.XPathNavigator)">
            <inheritdoc />
            <remarks>If a cache path attribute is found and is not empty, the given database cache is used rather
            than an in-memory cache for the file set.  If not found or empty, the index information is added to
            the standard in-memory cache.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.Commands.ESentIndexedCache.ReportCacheStatistics">
            <summary>
            Report the cache usage for the build
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.Commands.ESentIndexedCache.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Commands.ESentIndexedCache.CreateCache(System.Xml.XPath.XPathNavigator)">
            <summary>
            This is used to create the index cache database
            </summary>
            <param name="configuration">The configuration to use</param>
        </member>
        <member name="P:SandcastleBuilder.Components.Commands.ESentIndexedCache.Count">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.Commands.ESentIndexedCache.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Components.ESentResolveReferenceLinksComponent">
            <summary>
            This is a version of the <c>ResolveReferenceLinksComponent2</c> that stores the MSDN content IDs and the
            framework targets in persistent ESENT databases.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.ESentResolveReferenceLinksComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>This component is obsolete and will be removed in a future release.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.ESentResolveReferenceLinksComponent.CreateMsdnResolver(System.Xml.XPath.XPathNavigator)">
            <summary>
            This is overridden to allow use of an ESENT backed MSDN content ID cache
            </summary>
            <param name="configuration">The component configuration</param>
            <returns>An MSDN resolver instance</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.ESentResolveReferenceLinksComponent.CreateTargetDictionary(System.Xml.XPath.XPathNavigator)">
            <summary>
            This is overridden to create a target dictionary that utilizes an ESENT database for persistence
            </summary>
            <param name="configuration">The configuration element for the target dictionary</param>
            <returns>A simple dictionary if no <c>cachePath</c> attribute is found or an ESENT backed target
            dictionary if the attribute is found.</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.ESentResolveReferenceLinksComponent.UpdateMsdnContentIdCache">
            <summary>
            This is overridden to report the persistent cache information
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.ESentResolveReferenceLinksComponent.ConfigureComponent(System.String)">
            <summary>
            This static method is used by the Sandcastle Help File Builder to let the component perform its own
            configuration.
            </summary>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
        </member>
        <member name="T:SandcastleBuilder.Components.Targets.ESentTargetDictionary">
            <summary>
            This contains a collection of targets indexed by member ID stored in a Managed ESENT
            <c>PersistentDictionary&lt;TKey, TValue&gt;</c>.
            </summary>
            <remarks>The behavior of this dictionary is to return null if a target ID is not found and to replace
            existing entries if a duplicate ID is added.  All targets are stored in a Managed ESENT database.  The
            initial use will create the database slowing down initialization on first use.  Subsequent uses will not
            need to recreate it.  The trade off is that it can use much less memory at the expense of some build
            speed for each topic.  The speed difference is offset somewhat by the shorter initialization time.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.ESentTargetDictionary.#ctor(Microsoft.Ddue.Tools.BuildComponent,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="component">The build component that owns the dictionary.  This is useful for logging
            messages during initialization.</param>
            <param name="configuration">The target dictionary configuration</param>
            <returns>A target dictionary instance that uses a simple in-memory
            <see cref="T:System.Collections.Generic.Dictionary`2"/> instance to store the targets.</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.ESentTargetDictionary.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.ESentTargetDictionary.ReportCacheStatistics">
            <summary>
            Report the cache usage for the build
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.ESentTargetDictionary.Add(System.String,Microsoft.Ddue.Tools.Targets.Target)">
            <inheritdoc />
            <remarks>If the key already exists, the existing value is replaced</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.ESentTargetDictionary.ContainsKey(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.ESentTargetDictionary.TryGetValue(System.String,Microsoft.Ddue.Tools.Targets.Target@)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.ESentTargetDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Ddue.Tools.Targets.Target})">
            <inheritdoc />
            <remarks>If the key already exists, the existing value is replaced</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.ESentTargetDictionary.Clear">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.ESentTargetDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Ddue.Tools.Targets.Target})">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.ESentTargetDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Ddue.Tools.Targets.Target}[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.ESentTargetDictionary.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.Targets.ESentTargetDictionary.Keys">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.Targets.ESentTargetDictionary.Values">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.Targets.ESentTargetDictionary.Item(System.String)">
            <inheritdoc />
            <returns>If not found, this implementation returns null.</returns>
        </member>
        <member name="P:SandcastleBuilder.Components.Targets.ESentTargetDictionary.Count">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Components.IntelliSenseComponent">
            <summary>
            This component is now obsolete and will be removed in a future release.  Use the one in the Sandcastle
            BuildComponents assembly instead.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>This component is now obsolete and will be removed in a future release.  Use the one in the
            Sandcastle BuildComponents assembly instead.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.IntelliSenseComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This component is obsolete and will do nothing.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="T:SandcastleBuilder.Components.MSHelpAttrComponent">
            <summary>
            This component is now obsolete and will be removed in a future release.  Use the one in the Sandcastle
            BuildComponents assembly instead.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.MSHelpAttrComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>This component is now obsolete and will be removed in a future release.  Use the one in the
            Sandcastle BuildComponents assembly instead.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.MSHelpAttrComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This component is obsolete and will do nothing.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="T:SandcastleBuilder.Components.MultiFormatOutputComponent">
            <summary>
            This build component is used to execute one or more sets of build components each based on a specific
            help file output format.
            </summary>
            <remarks>One or more components can be executed based on a specified list of one or more help file output
            formats.  Only the components related to the requested set of format types will be executed.</remarks>
            <example>
            <code lang="xml" title="Example Configuration"
                source="..\..\SHFB\Source\SandcastleBuilderGUI\Templates\VS2005.config"
                region="Multi-format output component" />
            </example>
        </member>
        <member name="M:SandcastleBuilder.Components.MultiFormatOutputComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
        </member>
        <member name="M:SandcastleBuilder.Components.MultiFormatOutputComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This is implemented to execute each set of components for the requested output formats.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.MultiFormatOutputComponent.Dispose(System.Boolean)">
            <summary>
            Dispose of the nested components
            </summary>
            <param name="disposing">Pass true to dispose of the managed and unmanaged resources or false to just
            dispose of the unmanaged resources.</param>
        </member>
        <member name="T:SandcastleBuilder.Components.PostTransformComponent">
            <summary>
            This build component is obsolete and will be removed in a future release.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>This component is obsolete and will be removed in a future release.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This component is obsolete and will do nothing.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.PostTransformComponent.ConfigureComponent(System.String)">
            <summary>
            This static method is used by the Sandcastle Help File Builder to let the component perform its own
            configuration.
            </summary>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
        </member>
        <member name="T:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg">
            <summary>
            This form is used to configure the ESENT Copy From Index component (Comments Index Data)
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg.ResolvePath(System.String)">
            <summary>
            Resolve the given path by replacing LocalDataFolder with the actual path and seeing if it exists
            </summary>
            <param name="path">The path to check</param>
            <returns>The resolved path if it exists, or null if it does not</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg.lnkCodePlexSHFB_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the CodePlex home page of the Sandcastle Help File Builder project.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg.btnSelectCacheFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Select a cache folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg.chkEnableLocalCache_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Enable or disable current project target caching
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg.btnPurge_Click(System.Object,System.EventArgs)">
            <summary>
            Purge the content ID and target cache folders
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.UI.ESentCommentsIndexConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg">
            <summary>
            This form is used to configure the ESENT Copy From Index component (Reflection Index Data)
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg.ResolvePath(System.String)">
            <summary>
            Resolve the given path by replacing LocalDataFolder with the actual path and seeing if it exists
            </summary>
            <param name="path">The path to check</param>
            <returns>The resolved path if it exists, or null if it does not</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg.lnkCodePlexSHFB_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the CodePlex home page of the Sandcastle Help File Builder project.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg.btnSelectCacheFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Select a cache folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg.chkEnableLocalCache_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Enable or disable current project target caching
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg.btnPurge_Click(System.Object,System.EventArgs)">
            <summary>
            Purge the content ID and target cache folders
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.UI.ESentReflectionIndexConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg">
            <summary>
            This form is used to configure the ESENT Resolve Reference Links component
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg.ResolvePath(System.String)">
            <summary>
            Resolve the given path by replacing LocalDataFolder with the actual path and seeing if it exists
            </summary>
            <param name="path">The path to check</param>
            <returns>The resolved path if it exists, or null if it does not</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg.lnkCodePlexSHFB_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the CodePlex home page of the Sandcastle Help File Builder project.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg.btnSelectCacheFolder_Click(System.Object,System.EventArgs)">
            <summary>
            Select a cache folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg.chkEnableLocalCache_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Enable or disable current project target caching
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg.btnPurge_Click(System.Object,System.EventArgs)">
            <summary>
            Purge the content ID and target cache folders
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.UI.ESentResolveReferenceLinksConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.UI.PostTransformConfigDlg">
            <summary>
            This form is used to configure the settings for the <see cref="T:SandcastleBuilder.Components.PostTransformComponent"/>
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.PostTransformConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration
            XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.PostTransformConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.PostTransformConfigDlg.lnkCodePlexSHFB_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the CodePlex home page of the Sandcastle Help File Builder
            project.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.PostTransformConfigDlg.txtLogoFile_Leave(System.Object,System.EventArgs)">
            <summary>
            Update the image information if it changed
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.PostTransformConfigDlg.pnlImage_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw the image on the panel using the width and height settings to give an idea of how big it
            will be.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Components.UI.PostTransformConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.PostTransformConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.PostTransformConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.UI.PostTransformConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.ShowMissingComponent">
            <summary>
            This component is now obsolete and will be removed in a future release.  Use the one in the Sandcastle
            BuildComponents assembly instead.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.ShowMissingComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>This component is now obsolete and will be removed in a future release.  Use the one in the
            Sandcastle BuildComponents assembly instead.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.ShowMissingComponent.Apply(System.Xml.XmlDocument,System.String)">
            <summary>
            This component is obsolete and will do nothing.
            </summary>
            <param name="document">The XML document with which to work.</param>
            <param name="key">The key (member name) of the item being documented.</param>
        </member>
        <member name="T:SandcastleBuilder.Components.SqlCopyFromIndexComponent">
            <summary>
            This is a version of the <c>CopyFromIndexComponent</c> that stores the index data in a persistent SQL
            database.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlCopyFromIndexComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>This component is obsolete and will be removed in a future release.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlCopyFromIndexComponent.CreateIndex(System.Xml.XPath.XPathNavigator)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.SqlCopyFromIndexComponent.ConfigureComponent(System.String)">
            <summary>
            This static method is used by the Sandcastle Help File Builder to let the component perform its own
            configuration.
            </summary>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
        </member>
        <member name="T:SandcastleBuilder.Components.SqlDictionary`1">
            <summary>
            This is a simple dictionary that stores its data in a SQL Server database table.  An optional group ID
            can be used to segregate values within the dictionary.
            </summary>
            <typeparam name="TValue">The type of the value</typeparam>
            <remarks>This dictionary is intended for use in Sandcastle build components to store data needed for the
            build.  The key type is always a string as is the group ID type if used.  The value type is indicated
            using the <typeparamref name="TValue"/> type parameter and is assumed to be either a <see cref="T:System.String"/>
            or a reference type.</remarks>
            <threadsafety static="false" instance="false"/>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Simple dictionary constructor
            </summary>
            <param name="connectionString">The connection string to the SQL database</param>
            <param name="tableName">The table name</param>
            <param name="keyFieldName">The key field name</param>
            <param name="valueFieldName">The value field name</param>
            <remarks>Values in dictionaries that use this constructor are not grouped.  All values in the
            table are returned.</remarks>
            <overloads>There are two overloads for the constructor</overloads>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Grouped dictionary constructor
            </summary>
            <param name="connectionString">The connection string to the SQL database</param>
            <param name="tableName">The table name</param>
            <param name="groupId">The group ID field name</param>
            <param name="keyFieldName">The key field name</param>
            <param name="valueFieldName">The value field name</param>
            <param name="groupIdFieldName">The group ID to use</param>
            <remarks>Values in dictionaries that use this constructor are grouped using an additional field.
            This allows multiple related dictionaries to reside within the same table.  Only values from the
            dictionary identified by the group ID are returned.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.Purge">
            <summary>
            This is used to purge all data from the dictionary
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.Dispose">
            <summary>
            Dispose of the SQL dictionary
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.Add(System.String,`0)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.ContainsKey(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.Remove(System.String)">
            <inheritdoc />
            <remarks>This method is not implemented</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.TryGetValue(System.String,`0@)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.Add(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.Clear">
            <inheritdoc />
            <remarks>This method is not implemented</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.Contains(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.CopyTo(System.Collections.Generic.KeyValuePair{System.String,`0}[],System.Int32)">
            <inheritdoc />
            <remarks>This method is not implemented</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.Remove(System.Collections.Generic.KeyValuePair{System.String,`0})">
            <inheritdoc />
            <remarks>This method is not implemented</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.SqlDictionary`1.GroupId">
            <summary>
            This read-only property returns the group ID
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.SqlDictionary`1.LocalCacheSize">
            <summary>
            Set this to a non-zero value to enable local caching of values to speed up read-only access
            </summary>
            <value>If set to zero, the default, the local cache will not be used and all values will be retrieved
            from the database.</value>
        </member>
        <member name="P:SandcastleBuilder.Components.SqlDictionary`1.LocalCacheFlushCount">
            <summary>
            This read-only property returns the number of times the local cache was flushed because it filled up
            </summary>
            <value>This can help in figuring out an appropriate local cache size</value>
        </member>
        <member name="P:SandcastleBuilder.Components.SqlDictionary`1.CurrentLocalCacheCount">
            <summary>
            This read-only property returns the current number of local cache entries in use
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.SqlDictionary`1.IsDisposed">
            <summary>
            This read-only property returns whether or not the cache has been disposed of
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.SqlDictionary`1.Keys">
            <inheritdoc />
            <remarks>This property is not implemented</remarks>
        </member>
        <member name="P:SandcastleBuilder.Components.SqlDictionary`1.Values">
            <inheritdoc />
            <remarks>This property is not implemented</remarks>
        </member>
        <member name="P:SandcastleBuilder.Components.SqlDictionary`1.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.SqlDictionary`1.Count">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.SqlDictionary`1.IsReadOnly">
            <inheritdoc />
            <value>Always returns false</value>
        </member>
        <member name="T:SandcastleBuilder.Components.SqlDictionary`1.SqlDictionaryEnumerator">
            <summary>
            This is an enumerator class used to enumerate all key/value pairs in the SQL dictionary table
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.SqlDictionaryEnumerator.#ctor(SandcastleBuilder.Components.SqlDictionary{`0})">
            <summary>
            Constructor
            </summary>
            <param name="owner">The owning <see cref="T:SandcastleBuilder.Components.SqlDictionary`1"/> class</param>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.SqlDictionaryEnumerator.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.SqlDictionaryEnumerator.Reset">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.SqlDictionary`1.SqlDictionaryEnumerator.Dispose">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.SqlDictionary`1.SqlDictionaryEnumerator.Current">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.SqlDictionary`1.SqlDictionaryEnumerator.System#Collections#IEnumerator#Current">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Components.Commands.SqlIndexedCache">
            <summary>
            This is a version of the <c>InMemoryIndexCache</c> that adds the ability to store index information in a
            persistent SQL database.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.Commands.SqlIndexedCache.#ctor(Microsoft.Ddue.Tools.CopyFromIndexComponent,System.Xml.XmlNamespaceManager,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="component">The <see cref="T:Microsoft.Ddue.Tools.CopyFromIndexComponent"/> to which the indexed cache belongs</param>
            <param name="context">A context to use with the key and value XPath expressions</param>
            <param name="configuration">The configuration to use</param>
        </member>
        <member name="M:SandcastleBuilder.Components.Commands.SqlIndexedCache.AddDocuments(System.Xml.XPath.XPathNavigator)">
            <inheritdoc />
            <remarks>If a <c>groupId</c> attribute is found, the given database cache is used rather than an
            in-memory cache for the file set.  If not found, the index information is added to the standard
            in-memory cache.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.Commands.SqlIndexedCache.ReportCacheStatistics">
            <summary>
            Report the cache usage for the build
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.Commands.SqlIndexedCache.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Commands.SqlIndexedCache.CreateCache(System.Xml.XPath.XPathNavigator)">
            <summary>
            This is used to create the index cache
            </summary>
            <param name="configuration">The configuration to use</param>
        </member>
        <member name="P:SandcastleBuilder.Components.Commands.SqlIndexedCache.Count">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.Commands.SqlIndexedCache.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Components.SqlResolveReferenceLinksComponent">
            <summary>
            This is a version of the <c>ResolveReferenceLinksComponent2</c> that stores the MSDN content IDs and the
            framework targets in persistent SQL databases.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlResolveReferenceLinksComponent.#ctor(Microsoft.Ddue.Tools.BuildAssembler,System.Xml.XPath.XPathNavigator)">
            <summary>
            Constructor
            </summary>
            <param name="assembler">A reference to the build assembler.</param>
            <param name="configuration">The configuration information</param>
            <remarks>This component is obsolete and will be removed in a future release.</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlResolveReferenceLinksComponent.CreateMsdnResolver(System.Xml.XPath.XPathNavigator)">
            <summary>
            This is overridden to allow use of an Sql backed MSDN content ID cache
            </summary>
            <param name="configuration">The component configuration</param>
            <returns>An MSDN resolver instance</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlResolveReferenceLinksComponent.CreateTargetDictionary(System.Xml.XPath.XPathNavigator)">
            <summary>
            This is overridden to create a target dictionary that utilizes an SQL database for persistence
            </summary>
            <param name="configuration">The configuration element for the target dictionary</param>
            <returns>A simple dictionary if no <c>connectionString</c> attribute is found or a SQL backed target
            dictionary if the attribute is found.</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlResolveReferenceLinksComponent.UpdateMsdnContentIdCache">
            <summary>
            This is overridden to report the persistent cache information
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.SqlResolveReferenceLinksComponent.ConfigureComponent(System.String)">
            <summary>
            This static method is used by the Sandcastle Help File Builder to let the component perform its own
            configuration.
            </summary>
            <param name="currentConfig">The current configuration XML fragment</param>
            <returns>A string containing the new configuration XML fragment</returns>
        </member>
        <member name="T:SandcastleBuilder.Components.Targets.SqlTargetDictionary">
            <summary>
            This contains a collection of targets indexed by member ID stored in a <see cref="T:SandcastleBuilder.Components.SqlDictionary`1"/>
            </summary>
            <remarks>The behavior of this dictionary is to return null if a target ID is not found and to replace
            existing entries if a duplicate ID is added.  All targets are stored in a SQL database.  The
            initial use will create the database slowing down initialization on first use.  Subsequent uses will not
            need to recreate it.  The trade off is that it can use much less memory at the expense of some build
            speed for each topic.  The speed difference is offset somewhat by the shorter initialization time.</remarks>
            <threadsafety static="false" instance="false"/>
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.SqlTargetDictionary.#ctor(Microsoft.Ddue.Tools.BuildComponent,System.Xml.XPath.XPathNavigator,System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="component">The build component that owns the dictionary.  This is useful for logging
            messages during initialization.</param>
            <param name="configuration">The target dictionary configuration</param>
            <param name="connectionString">The connection string to use</param>
            <param name="groupId">The group ID to use</param>
            <param name="localCacheSize">The local cache size to use</param>
            <param name="reload">True to reload the cache or false to leave it alone.  This is used to reload
            project data so that it is always current.</param>
            <returns>A target dictionary instance that uses a simple in-memory
            <see cref="T:System.Collections.Generic.Dictionary`2"/> instance to store the targets.</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.SqlTargetDictionary.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.SqlTargetDictionary.LoadTargetDictionary(System.Int32)">
            <summary>
            This is overridden to load the SQL dictionary in a thread-safe manner
            </summary>
            <param name="maxDegreeOfParallelism">This can be used to override the maximum degree of parallelism.
            By default, it is -1 to allow as many threads as possible.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.SqlTargetDictionary.ReportCacheStatistics">
            <summary>
            Report the cache usage for the build
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.SqlTargetDictionary.Add(System.String,Microsoft.Ddue.Tools.Targets.Target)">
            <inheritdoc />
            <remarks>If the key already exists, the existing value is replaced</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.SqlTargetDictionary.ContainsKey(System.String)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.SqlTargetDictionary.TryGetValue(System.String,Microsoft.Ddue.Tools.Targets.Target@)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.SqlTargetDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Ddue.Tools.Targets.Target})">
            <inheritdoc />
            <remarks>If the key already exists, the existing value is replaced</remarks>
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.SqlTargetDictionary.Clear">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.SqlTargetDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Ddue.Tools.Targets.Target})">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.SqlTargetDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,Microsoft.Ddue.Tools.Targets.Target}[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:SandcastleBuilder.Components.Targets.SqlTargetDictionary.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.Targets.SqlTargetDictionary.Keys">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.Targets.SqlTargetDictionary.Values">
            <inheritdoc />
        </member>
        <member name="P:SandcastleBuilder.Components.Targets.SqlTargetDictionary.Item(System.String)">
            <inheritdoc />
            <returns>If not found, this implementation returns null.</returns>
        </member>
        <member name="P:SandcastleBuilder.Components.Targets.SqlTargetDictionary.Count">
            <inheritdoc />
        </member>
        <member name="T:SandcastleBuilder.Components.UI.SqlConnectionDlg">
            <summary>
            This form is used to enter the SQL Server connection string and set up the database
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlConnectionDlg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlConnectionDlg.ValidateConnectionString(System.String)">
            <summary>
            Validate the connection string
            </summary>
            <param name="connectionString">The connection string to test</param>
            <returns>True if valid, false if not</returns>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlConnectionDlg.TextBox_Enter(System.Object,System.EventArgs)">
            <summary>
            Clear the text selection when a text box gets the focus
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlConnectionDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Save the changes
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlConnectionDlg.btnCreate_Click(System.Object,System.EventArgs)">
            <summary>
            Create the database and its tables
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Components.UI.SqlConnectionDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlConnectionDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlConnectionDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.UI.SqlConnectionDlg.ConnectionString">
            <summary>
            This is used to get or set the connection string
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.UI.SqlCopyFromIndexConfigDlg">
            <summary>
            This form is used to configure the SQL Resolve Reference Links component
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlCopyFromIndexConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlCopyFromIndexConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlCopyFromIndexConfigDlg.lnkCodePlexSHFB_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the CodePlex home page of the Sandcastle Help File Builder project.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlCopyFromIndexConfigDlg.btnSetConnectionString_Click(System.Object,System.EventArgs)">
            <summary>
            Select a cache folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlCopyFromIndexConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlCopyFromIndexConfigDlg.btnPurge_Click(System.Object,System.EventArgs)">
            <summary>
            Purge the content ID and target cache tables
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlCopyFromIndexConfigDlg.txtConnectionString_Enter(System.Object,System.EventArgs)">
            <summary>
            Clear the selection when the connection string text box gets the focus
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Components.UI.SqlCopyFromIndexConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlCopyFromIndexConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlCopyFromIndexConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.UI.SqlCopyFromIndexConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
        <member name="T:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg">
            <summary>
            This form is used to configure the SQL Resolve Reference Links component
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="currentConfig">The current XML configuration XML fragment</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg.btnCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Close without saving
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg.lnkCodePlexSHFB_LinkClicked(System.Object,System.Windows.Forms.LinkLabelLinkClickedEventArgs)">
            <summary>
            Go to the CodePlex home page of the Sandcastle Help File Builder project.
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg.btnSetConnectionString_Click(System.Object,System.EventArgs)">
            <summary>
            Select a cache folder
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg.chkEnableLocalCache_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Enable or disable current project target caching
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Validate the configuration and save it
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg.btnPurge_Click(System.Object,System.EventArgs)">
            <summary>
            Purge the content ID and target cache tables
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg.txtConnectionString_Enter(System.Object,System.EventArgs)">
            <summary>
            Clear the selection when the connection string text box gets the focus
            </summary>
            <param name="sender">The sender of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:SandcastleBuilder.Components.UI.SqlResolveReferenceLinksConfigDlg.Configuration">
            <summary>
            This is used to return the configuration information
            </summary>
        </member>
    </members>
</doc>

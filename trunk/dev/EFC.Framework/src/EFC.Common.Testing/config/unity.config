<?xml version="1.0" encoding="utf-8"?>

<unity >
  <typeAliases>
    <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
    <typeAlias alias="bool" type="System.Boolean" />
    <typeAlias alias="string" type="System.String" />
    <typeAlias alias="object" type="System.Object" />
    <typeAlias alias="int" type="System.Int32" />
    <typeAlias alias="type" type="System.Type" />
    <typeAlias alias="perThread" type="Microsoft.Practices.Unity.PerThreadLifetimeManager, Microsoft.Practices.Unity" />
    <typeAlias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity" />
    <typeAlias alias="typeName" type="System.Configuration.TypeNameConverter, System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  </typeAliases>
  <containers>
    <container name="parent">
      <!--live service-->
      <instance type="string" name="PMOContainer"  value="metadata=res://*/Data.PMOModel.csdl|res://*/Data.PMOModel.ssdl|res://*/Data.PMOModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=192.168.1.10,2433;initial catalog=PMO;user id=pmoApp;password=rdhaf0mW@#;MultipleActiveResultSets=True;App=EntityFramework&quot;" />

      <!--local sevrer-->
      <!--<instance type="string" name="PMOContainer"  value="metadata=res://*/Data.PMOModel.csdl|res://*/Data.PMOModel.ssdl|res://*/Data.PMOModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=192.168.1.10;initial catalog=PMO;user id=pmoApp;password=rdhaf0mW@#;MultipleActiveResultSets=True;App=EntityFramework&quot;" />-->

      <!--dev server-->
      <!--<instance type="string" name="PMOContainer"  value="metadata=res://*/Data.PMOModel.csdl|res://*/Data.PMOModel.ssdl|res://*/Data.PMOModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=192.168.1.10,2433;initial catalog=PMO_DEV;user id=pmoApp;password=rdhaf0mW@#;MultipleActiveResultSets=True;App=EntityFramework&quot;" />-->

      <!--ESSL-Read-Only Databases-->
      <instance type="string" name="EsslContainer" value="metadata=res://*/Data.EsslModel.csdl|res://*/Data.EsslModel.ssdl|res://*/Data.EsslModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=192.168.1.7\x86;initial catalog=etimetracklite1;user id=codeno47;password=rdhaf0mw@#;MultipleActiveResultSets=True;App=EntityFramework&quot;"/>
      <instance type="string" name="EsslWebContainer" value="metadata=res://*/Data.EsslModel.csdl|res://*/Data.EsslModel.ssdl|res://*/Data.EsslModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=192.168.1.7\x86;initial catalog=etimetrackliteweb;user id=codeno47;password=rdhaf0mw@#;MultipleActiveResultSets=True;App=EntityFramework&quot;"/>


      <types>

        <!--Repository Start-->

        <type type="EFC.Components.Data.IRepositoryContext, EFC.Components"
              mapTo="Experion.PMO.Services.Data.PmoRepositoryContext, Experion.PMO.Services">
          <lifetime type="perThread" />
        </type>

        <type type="Experion.PMO.Services.Data.EsslRepositoryContext, Experion.PMO.Services"
              mapTo="Experion.PMO.Services.Data.EsslRepositoryContext, Experion.PMO.Services">
          <lifetime type="perThread" />
        </type>

        <type type="Experion.PMO.Services.Data.EsslWebRepositoryContext, Experion.PMO.Services"
              mapTo="Experion.PMO.Services.Data.EsslWebRepositoryContext, Experion.PMO.Services">
          <lifetime type="perThread" />
        </type>

        <!--Repository End-->

        <!--Controller Start-->

        <!--<type type="Experion.FieldMax.Client.Controller.CarryingAndForwardingController, Experion.FieldMax.Client" mapTo="Experion.FieldMax.Client.Controller.CarryingAndForwardingController, Experion.FieldMax.Client" />-->

        <!--Controller End-->

        <!--Services Start-->

        <type type="Experion.PMO.Hosting.IPMOService, Experion.PMO.Hosting"
            mapTo="Experion.PMO.Hosting.PMOService, Experion.PMO.Hosting" >
          <lifetime type="perThread" />
        </type>

        <type type="Experion.PMO.Services.EmployeeService, Experion.PMO.Services"
           mapTo="Experion.PMO.Services.EmployeeService, Experion.PMO.Services" >
          <lifetime type="perThread" />
        </type>

        <type type="Experion.PMO.Services.DeviceLogService, Experion.PMO.Services"
         mapTo="Experion.PMO.Services.DeviceLogService, Experion.PMO.Services" >
          <lifetime type="perThread" />
        </type>





        <!--Services End-->

        <!--Application Services Start-->

        <type type="Experion.PMO.Services.Application.ASLogDataService, Experion.PMO.Services" mapTo="Experion.PMO.Services.Application.ASLogDataService, Experion.PMO.Services" />


        <!--Application Services End-->

      </types>
    </container>
  </containers>
</unity>
//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2013-07-17 - 18:04:25
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using EFC.Samples.Service.Contracts.Dto;
using EFC.Samples.Service.Model;

namespace EFC.Samples.Service.Extension
{

    /// <summary>
    /// Assembler for <see cref="Shop"/> and <see cref="ShopDTO"/>.
    /// </summary>
    public static partial class ShopAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="ShopDTO"/> converted from <see cref="Shop"/>.</param>
        static partial void OnDTO(this Shop entity, ShopDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Shop"/> converted from <see cref="ShopDTO"/>.</param>
        static partial void OnEntity(this ShopDTO dto, Shop entity);

        /// <summary>
        /// Converts this instance of <see cref="ShopDTO"/> to an instance of <see cref="Shop"/>.
        /// </summary>
        /// <param name="dto"><see cref="ShopDTO"/> to convert.</param>
        public static Shop ToEntity(this ShopDTO dto)
        {
            if (dto == null) return null;

            var entity = new Shop();

            entity.ShopId = dto.ShopId;
            entity.Name = dto.Name;
            entity.ShortName = dto.ShortName;
            entity.ShopTypeId = dto.ShopTypeId;
            entity.ShopClassId = dto.ShopClassId;
            entity.LocationId = dto.LocationId;
            entity.Address = dto.Address;
            entity.CityId = dto.CityId;
            entity.StateId = dto.StateId;
            entity.CountryId = dto.CountryId;
            entity.ZoneId = dto.ZoneId;
            entity.RouteId = dto.RouteId;
            entity.Active = dto.Active;
            entity.DistributorId = dto.DistributorId;
            entity.ContactPerson = dto.ContactPerson;
            entity.ContactNo = dto.ContactNo;
            entity.CreatedDate = dto.CreatedDate;
            entity.ModifiedDate = dto.ModifiedDate;
            entity.CreatedBy = dto.CreatedBy;
            entity.DistrictId = dto.DistrictId;
            entity.MobileNo = dto.MobileNo;
            entity.Email = dto.Email;
            entity.PINCode = dto.PINCode;
            entity.TINNo = dto.TINNo;
            entity.CSTNo = dto.CSTNo;
            entity.ThirdPartyShopCode = dto.ThirdPartyShopCode;
            entity.CustomerGroupId = dto.CustomerGroupId;
            entity.CreditLimit = dto.CreditLimit;
            entity.DailyActive = dto.DailyActive;
            entity.DoorNo = dto.DoorNo;
            entity.StreetName = dto.StreetName;
            entity.ShopLatitude = dto.ShopLatitude;
            entity.ShopLongitude = dto.ShopLongitude;
            entity.TransporterId = dto.TransporterId;
            entity.CreditStatus = dto.CreditStatus;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="Shop"/> to an instance of <see cref="ShopDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="Shop"/> to convert.</param>
        public static ShopDTO ToDTO(this Shop entity)
        {
            if (entity == null) return null;

            var dto = new ShopDTO();

            dto.ShopId = entity.ShopId;
            dto.Name = entity.Name;
            dto.ShortName = entity.ShortName;
            dto.ShopTypeId = entity.ShopTypeId;
            dto.ShopClassId = entity.ShopClassId;
            dto.LocationId = entity.LocationId;
            dto.Address = entity.Address;
            dto.CityId = entity.CityId;
            dto.StateId = entity.StateId;
            dto.CountryId = entity.CountryId;
            dto.ZoneId = entity.ZoneId;
            dto.RouteId = entity.RouteId;
            dto.Active = entity.Active;
            dto.DistributorId = entity.DistributorId;
            dto.ContactPerson = entity.ContactPerson;
            dto.ContactNo = entity.ContactNo;
            dto.CreatedDate = entity.CreatedDate;
            dto.ModifiedDate = entity.ModifiedDate;
            dto.CreatedBy = entity.CreatedBy;
            dto.DistrictId = entity.DistrictId;
            dto.MobileNo = entity.MobileNo;
            dto.Email = entity.Email;
            dto.PINCode = entity.PINCode;
            dto.TINNo = entity.TINNo;
            dto.CSTNo = entity.CSTNo;
            dto.ThirdPartyShopCode = entity.ThirdPartyShopCode;
            dto.CustomerGroupId = entity.CustomerGroupId;
            dto.CreditLimit = entity.CreditLimit;
            dto.DailyActive = entity.DailyActive;
            dto.DoorNo = entity.DoorNo;
            dto.StreetName = entity.StreetName;
            dto.ShopLatitude = entity.ShopLatitude;
            dto.ShopLongitude = entity.ShopLongitude;
            dto.TransporterId = entity.TransporterId;
            dto.CreditStatus = entity.CreditStatus;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="ShopDTO"/> to an instance of <see cref="Shop"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Shop> ToEntities(this IEnumerable<ShopDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="Shop"/> to an instance of <see cref="ShopDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<ShopDTO> ToDTOs(this IEnumerable<Shop> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}

<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.TeamFoundation.Controls</name>
  </assembly>
  <members>
    <member name="T:Microsoft.TeamFoundation.Controls.FavoriteItem">
      <summary>Represents favorite entry in Identity Favorites Store Originally Cloned from TSWA server implementation(for which client components could not take dependencies)</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.FavoriteItem.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.FavoriteItem.Data">
      <summary>Application specific data for the entry</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.FavoriteItem.Id">
      <summary>Unique Id of the entry</summary>
      <returns>Returns <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.FavoriteItem.IsFolder">
      <summary>Sugar to determine whether entry is a folder</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.FavoriteItem.Name">
      <summary>Display text for favorite entry</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.FavoriteItem.ParentId">
      <summary>Id of the parent favorite folder</summary>
      <returns>Returns <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.FavoriteItem.Type">
      <summary>Application specific favorite entry specifier. Empty or Null represents that Favorite item is a Folder</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.ITeamExplorer">
      <summary>Team Explorer interface.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorer.ClearNotifications">
      <summary>Clears all notifications that do not require the user's confirmation.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorer.ClosePage(Microsoft.TeamFoundation.Controls.ITeamExplorerPage)">
      <summary>Close the specified page.</summary>
      <param name="page">Page instance</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorer.CurrentPage">
      <summary>Get the current page. This can be null if there is no current page. The PropertyChanged event will be fired when this property changes.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.ITeamExplorerPage" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorer.HideNotification(System.Guid)">
      <summary>Removes the notification show using the specified id from the notification area.</summary>
      <returns>True if a notification was removed. False if a notification associated with id was not currently visible.</returns>
      <param name="id">The id of the notification that should be removed.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorer.IsNotificationVisible(System.Guid)">
      <summary>Determine whether a notification associated with the specified id is currently visible in the Team Explorer.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
      <param name="id">The id that was passed into ShowNotification for a particular notification.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorer.NavigateToPage(System.Guid,System.Object)">
      <summary>Navigate to the specified page.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.ITeamExplorerPage" />.</returns>
      <param name="pageId">Page ID</param>
      <param name="context">(Optional) Page context. This can be null if the page does not need context.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorer.ShowNotification(System.String,Microsoft.TeamFoundation.Controls.NotificationType,Microsoft.TeamFoundation.Controls.NotificationFlags,System.Windows.Input.ICommand,System.Guid)">
      <summary>Show a notification message in the Team Explorer tool window.</summary>
      <param name="message">The message text to display for the notification.</param>
      <param name="type">This indicates what kind of icon the notification will get.</param>
      <param name="flags">These flags indicate the behavior of the notification.</param>
      <param name="command">This allows the owning page/object to be called back for all embedding links instead of allowing the default handler to attempt to handle them.</param>
      <param name="id">Used to define a group of notifications. Only one notification shown with a particular id will be visible at a time.</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.ITeamExplorerNavigationItem">
      <summary>Team Explorer navigation item interface.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerNavigationItem.Execute">
      <summary>Execute this item.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerNavigationItem.Image">
      <summary>Get the image to be shown for this item. This should be a 16x16 image.</summary>
      <returns>Returns <see cref="T:System.Drawing.Image" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerNavigationItem.Invalidate">
      <summary>Invalidate the state of this item.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerNavigationItem.IsVisible">
      <summary>Get the visibility of this item. If the visibility changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerNavigationItem.Text">
      <summary>Get the text of this item. If the text changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.ITeamExplorerNavigationLink">
      <summary>Team Explorer navigation link interface.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerNavigationLink.Execute">
      <summary>Execute this link.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerNavigationLink.Invalidate">
      <summary>Invalidate the state of this item.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerNavigationLink.IsEnabled">
      <summary>Get the enabled state of this link. If the state changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerNavigationLink.IsVisible">
      <summary>Get the visibility of this link. If the visibility changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerNavigationLink.Text">
      <summary>Get the text of this link. If the text changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.ITeamExplorerPage">
      <summary>Team Explorer page interface.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPage.Cancel">
      <summary>Cancel any currently running operations on this page.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPage.GetExtensibilityService(System.Type)">
      <summary>Get the requested extensibility service for this page.</summary>
      <returns>The service instance if found, null otherwise.</returns>
      <param name="serviceType">Service type</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPage.Initialize(System.Object,Microsoft.TeamFoundation.Controls.PageInitializeEventArgs)">
      <summary>Initialize this page.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerPage.IsBusy">
      <summary>Get the busy state of this page. If the busy state changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPage.Loaded(System.Object,Microsoft.TeamFoundation.Controls.PageLoadedEventArgs)">
      <summary>The page and all sections have been created and initialized.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerPage.PageContent">
      <summary>Get the content for this page. If the content changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPage.Refresh">
      <summary>Refresh this page.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPage.SaveContext(System.Object,Microsoft.TeamFoundation.Controls.PageSaveContextEventArgs)">
      <summary>The page should save context. This is called before navigation to another page, Team Project context switch, and so on</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerPage.Title">
      <summary>Get the title of this page. If the title changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.ITeamExplorerPageExtensions">
      <summary>ITeamExplorerPage extension methods.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPageExtensions.Close(Microsoft.TeamFoundation.Controls.ITeamExplorerPage)">
      <summary>Close this page.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPageExtensions.GetFocusedSection(Microsoft.TeamFoundation.Controls.ITeamExplorerPage)">
      <summary>Get the focused section for this page.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.ITeamExplorerSection" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPageExtensions.GetId(Microsoft.TeamFoundation.Controls.ITeamExplorerPage)">
      <summary>Get the ID for this page.</summary>
      <returns>Returns <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPageExtensions.GetProperty(Microsoft.TeamFoundation.Controls.ITeamExplorerPage,Microsoft.TeamFoundation.Controls.PageProperties)">
      <summary>Get a page property.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPageExtensions.GetSection(Microsoft.TeamFoundation.Controls.ITeamExplorerPage,System.Guid)">
      <summary>Get the section for this page with the specified ID.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.ITeamExplorerSection" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPageExtensions.GetSections(Microsoft.TeamFoundation.Controls.ITeamExplorerPage)">
      <summary>Get the sections for this page.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.ITeamExplorerSection" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPageExtensions.GetService``1(Microsoft.TeamFoundation.Controls.ITeamExplorerPage)">
      <summary>Get the requested service.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.ITeamExplorerSection" />.</returns>
      <typeparam name="T">Service type</typeparam>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPageExtensions.RefreshPageAndSections(Microsoft.TeamFoundation.Controls.ITeamExplorerPage)">
      <summary>Refresh this page and its sections.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerPageExtensions.SetProperty(Microsoft.TeamFoundation.Controls.ITeamExplorerPage,Microsoft.TeamFoundation.Controls.PageProperties,System.Object)">
      <summary>Set a page property.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.ITeamExplorerSection">
      <summary>Team Explorer section interface.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerSection.Cancel">
      <summary>Cancel any currently running operations on this section.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerSection.GetExtensibilityService(System.Type)">
      <summary>Get the requested extensibility service for this page.</summary>
      <returns>The service instance if found, null otherwise.</returns>
      <param name="serviceType">Service type</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerSection.Initialize(System.Object,Microsoft.TeamFoundation.Controls.SectionInitializeEventArgs)">
      <summary>Initialize this section.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerSection.IsBusy">
      <summary>Get the busy state of this section. If the busy state changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerSection.IsExpanded">
      <summary>Get the expanded state of this section. If the expanded state changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerSection.IsVisible">
      <summary>Get the visibility of this section. If the visibility changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerSection.Loaded(System.Object,Microsoft.TeamFoundation.Controls.SectionLoadedEventArgs)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerSection.Refresh">
      <summary>Refresh this section.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerSection.SaveContext(System.Object,Microsoft.TeamFoundation.Controls.SectionSaveContextEventArgs)">
      <summary>The section should save context. This is called before navigation to another page, Team Project context switch, and so on</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerSection.SectionContent">
      <summary>Get the content for this section. If the content changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.ITeamExplorerSection.Title">
      <summary>Get the title of this section. If the title changes, the PropertyChanged event should be raised.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.ITeamExplorerSectionExtensions">
      <summary>ITeamExplorerSection extension methods.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerSectionExtensions.GetId(Microsoft.TeamFoundation.Controls.ITeamExplorerSection)">
      <summary>Get the ID for this section.</summary>
      <returns>Returns <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerSectionExtensions.GetProperty(Microsoft.TeamFoundation.Controls.ITeamExplorerSection,Microsoft.TeamFoundation.Controls.SectionProperties)">
      <summary>Get a section property.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.ITeamExplorerSectionExtensions.SetProperty(Microsoft.TeamFoundation.Controls.ITeamExplorerSection,Microsoft.TeamFoundation.Controls.SectionProperties,System.Object)">
      <summary>Set a section property.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.NotificationFlags">
      <summary>Determines how the notification will behave.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.NotificationFlags.None">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.NotificationFlags.RequiresConfirmation">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.NotificationFlags.NoTooltips">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.NotificationFlags.All">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.NotificationType">
      <summary>Describes the type of notification.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.NotificationType.Information">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.NotificationType.Warning">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.NotificationType.Error">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.PageInitializeEventArgs">
      <summary>Team Explorer page initialize event args.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.PageInitializeEventArgs.#ctor(System.IServiceProvider,System.Object)">
      <summary>Constructor.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.PageInitializeEventArgs.Context">
      <summary>Get the page's initial context.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.PageInitializeEventArgs.ServiceProvider">
      <summary>Get the page's service provider.</summary>
      <returns>Returns <see cref="T:System.IServiceProvider" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.PageLoadedEventArgs">
      <summary>Team Explorer page loaded event args.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.PageLoadedEventArgs.#ctor">
      <summary>Constructor.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.PageProperties">
      <summary>Team Explorer page properties.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.PageProperties.Unknown">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.PageProperties.VerticalScrollBarVisible">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.PageProperties.HorizontalScrollBarVisible">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.PageProperties.HelpKeyword">
      <summary>String value. Help keyword to show for the page.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.PageSaveContextEventArgs">
      <summary>Team Explorer page save context event args.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.PageSaveContextEventArgs.#ctor">
      <summary>Constructor.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.PageSaveContextEventArgs.Context">
      <summary>Set the page's context to be saved.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.RelayEqualityComparer`1">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.RelayEqualityComparer`1.#ctor(System.Func`3,System.Char)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.RelayEqualityComparer`1.Equals(`0,`0)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.RelayEqualityComparer`1.GetHashCode(`0)">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.SectionInitializeEventArgs">
      <summary>Team Explorer section initialize event args.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.SectionInitializeEventArgs.#ctor(System.IServiceProvider,System.Object)">
      <summary>Constructor.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.SectionInitializeEventArgs.Context">
      <summary>Get the section's initial context.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.SectionInitializeEventArgs.ServiceProvider">
      <summary>Get the section's service provider.</summary>
      <returns>Returns <see cref="T:System.IServiceProvider" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.SectionLoadedEventArgs"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.SectionLoadedEventArgs.#ctor"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.SectionProperties">
      <summary>Team Explorer section properties.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.SectionProperties.Unknown">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.SectionSaveContextEventArgs">
      <summary>Team Explorer section save context event args.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.SectionSaveContextEventArgs.#ctor">
      <summary>Constructor.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.SectionSaveContextEventArgs.Context">
      <summary>Set the section's context to be saved for future restoration.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemAttribute">
      <summary>Team Explorer navigation item registration attribute.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemAttribute.#ctor(System.String,System.Int32)">
      <summary>Constructor.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemAttribute.Id">
      <summary>Get/set the ID.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemAttribute.Priority">
      <summary>Get/set the priority.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemAttribute.TargetPageId">
      <summary>Get/set the ID of the page that is the target of this navigation item. This enables Team Explorer to associate a navigation item with a page and set the check box in the Team Explorer navigation control accordingly.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemIds"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemIds.Builds"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemIds.Documents"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemIds.Home"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemIds.MyWork"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemIds.PendingChanges"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemIds.Reports"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemIds.Settings"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemIds.WebAccess"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemIds.WorkItems"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemPriority"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemPriority.Builds"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemPriority.Documents"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemPriority.Home"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemPriority.MyWork"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemPriority.PendingChanges"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemPriority.Reports"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemPriority.Settings"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemPriority.WebAccess"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationItemPriority.WorkItems"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationLinkAttribute">
      <summary>Team Explorer navigation link registration attribute.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationLinkAttribute.#ctor(System.String,System.String,System.Int32)">
      <summary>Constructor.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationLinkAttribute.Id">
      <summary>Get/set the ID.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationLinkAttribute.ParentItemId">
      <summary>Get/set the parent item ID.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationLinkAttribute.Priority">
      <summary>Get/set the priority.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationLinkIds"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerNavigationLinkIds.MyWorkRequestCodeReview"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.TeamExplorerPageAttribute">
      <summary>Team Explorer page registration attribute.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.TeamExplorerPageAttribute.#ctor(System.String)">
      <summary>Constructor.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerPageAttribute.Id">
      <summary>Get/set the ID.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerPageAttribute.ParentPageId">
      <summary>Get/set the parent page ID.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds">
      <summary>Central location for our built-in Team Explorer page Guids</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.AllChanges"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.Builds"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.ChangesetDetails"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.Documents"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.FindShelvesets"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.Home"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.MyWork"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.PendingChanges"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.Reports"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.RequestCodeReview"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.Search"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.Settings"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.ShelvesetDetails"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.ViewCodeReview"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPageIds.WorkItems"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.TeamExplorerPartMetadataNames"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPartMetadataNames.PartIdentity"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPartMetadataNames.PartTargetHost"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerPartMetadataNames.PartVersion"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.TeamExplorerSectionAttribute">
      <summary>Team Explorer section registration attribute.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.TeamExplorerSectionAttribute.#ctor(System.String,System.String,System.Int32)">
      <summary>Constructor.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerSectionAttribute.Id">
      <summary>Get the ID.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerSectionAttribute.ParentPageId">
      <summary>Get the parent page ID.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerSectionAttribute.Priority">
      <summary>Get the priority.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.TeamExplorerSectionPlacementAttribute">
      <summary>Team Explorer section placement attribute.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.TeamExplorerSectionPlacementAttribute.#ctor(System.String,System.Int32)">
      <summary>Constructor.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerSectionPlacementAttribute.PlacementParentPageId">
      <summary>Get the parent page ID.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamExplorerSectionPlacementAttribute.PlacementPriority">
      <summary>Get the priority.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.TeamExplorerTargetHostNames"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerTargetHostNames.TeamFoundation">
      <summary>Generic host name used when you run Team Explorer outside Visual Studio.</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.TeamExplorerTargetHostNames.VisualStudio">
      <summary>Team Explorer plugins require Visual Studio.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.TeamFoundationIconStripHelper"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.TeamFoundationIconStripHelper.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.TeamFoundationIconStripHelper.Instance"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.TeamFoundationIconStripHelper.TransformImage(System.Drawing.Image,System.Drawing.Color)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WinForms.DWebBrowserEvents2"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.DWebBrowserEvents2.NavigateError(System.Object,System.Object@,System.Object@,System.Object@,System.Boolean@)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WinForms.PermissionEvents">
      <summary>This class is used to interact with java script running in the browser control.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.PermissionEvents.Close"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.PermissionEvents.Help"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WinForms.PermissionsWebBrowser"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.PermissionsWebBrowser.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.PermissionsWebBrowser.CreateSink"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.PermissionsWebBrowser.DetachSink"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WinForms.PermissionsWebBrowser.NavigateError"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.PermissionsWebBrowser.OnNavigateError(Microsoft.TeamFoundation.Controls.WinForms.WebBrowserNavigateErrorEventArgs)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.#ctor">
      <summary>Initializes the underlying bitmap surfaces and populates the Glyphs into them.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.ArrowCollapsedFill"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.ArrowCollapsedForeground"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.ArrowExpandedFill"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.ArrowExpandedForeground"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.ArrowSelectedFill"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.ArrowSelectedForeground"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.RenderGlyph(System.Drawing.Color,System.Drawing.Color,System.Drawing.PointF[],System.Drawing.Bitmap)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.Reset">
      <summary>Reset any cached themed glyphs - Apply theme changes on existing bitmaps.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.TreeViewCollapsed">
      <summary>Returns the glyph icon that shows a collapsed node in a tree view</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.TreeViewCollapsedSelected">
      <summary>Returns the glyph icon that shows a collapsed * Selected node in a tree view</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.TreeViewExpanded">
      <summary>Returns the glyph icon that shows an expanded node in a tree view</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemedIconSet.TreeViewExpandedSelected">
      <summary>Returns the glyph icon that shows an expanded * Selected node in a tree view</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WinForms.ThemeInvariantWinformsIcons">
      <summary>Contains theme invariant Icons.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.ThemeInvariantWinformsIcons.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemeInvariantWinformsIcons.ArrowCollapsedFill"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemeInvariantWinformsIcons.ArrowCollapsedForeground"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemeInvariantWinformsIcons.ArrowExpandedFill"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemeInvariantWinformsIcons.ArrowExpandedForeground"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemeInvariantWinformsIcons.ArrowSelectedFill"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemeInvariantWinformsIcons.ArrowSelectedForeground"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.ThemeInvariantWinformsIcons.Instance"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.ThemeInvariantWinformsIcons.ResetIfExists"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WinForms.WebBrowserNavigateErrorEventArgs"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WinForms.WebBrowserNavigateErrorEventArgs.#ctor(System.String,System.String,System.Int32,System.Boolean)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.WebBrowserNavigateErrorEventArgs.Cancel">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.WebBrowserNavigateErrorEventArgs.Frame">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.WebBrowserNavigateErrorEventArgs.StatusCode">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WinForms.WebBrowserNavigateErrorEventArgs.Url">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WinForms.WebBrowserNavigateErrorEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListView">
      <summary>AutoColumnListView</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListView.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListView.BorderVisibility">
      <summary>Get/Set true/false to show/hide the border</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListView.BorderVisibilityProperty">
      <summary>BorderVisibility dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListView.Columns">
      <summary>Get the columns for the list view</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumn" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListView.HeaderVisibility">
      <summary>Get/Set true/false to show/hide the column header</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListView.HeaderVisibilityProperty">
      <summary>HeaderVisibility dependency property</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListView.Initialize">
      <summary>Create the columns</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListView.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListView.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumn">
      <summary>Describes a column definition for an AutoColumnListView</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumn.#ctor(System.String,Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumnContentType,Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumnSizingMode,System.Double,System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumn.ContentType">
      <summary>Get/Set the column content type</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumnContentType" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumn.DataBindingName">
      <summary>Get/Set the column data binding name</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumn.HeaderCaption">
      <summary>Get/Set the column header caption</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumn.SizingMode">
      <summary>Get/Set the column sizing mode</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumnSizingMode" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumn.Width">
      <summary>Get/Set the column initial width</summary>
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumnContentType">
      <summary>Content type for a column in an AutoColumnListView</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumnContentType.Text">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumnContentType.Image">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumnContentType.Hyperlink">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumnSizingMode">
      <summary>Sizing mode for a column in an AutoColumnListView</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumnSizingMode.Absolute">
      <summary>Fixed width in pixel/unit</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumnSizingMode.Fill">
      <summary>Fill the column to the available space. If there are N columns to fill, the available space is evenly distributed among them.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewHyperlink">
      <summary>Encapsulate information about a hyperlink</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewHyperlink.#ctor(System.String,Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewHyperlink.HyperlinkCallback)">
      <summary>Create a hyperlink</summary>
      <param name="text">hyperlink text</param>
      <param name="callback">callback when the hyperlink is clicked. Specify null to show just the text.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewHyperlink.Callback">
      <summary>Get/Set the hyperlink activate callback. Set to null to not show as a hyperlink. This gives the ability to custom each cell of a Hyperlink column.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewHyperlink.HyperlinkCallback" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewHyperlink.Text">
      <summary>Get/Set the hyperlink text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewHyperlink.HyperlinkCallback"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewItem">
      <summary>Provides a base class for a data-bound item in an AutoColumnListView</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewItem.#ctor"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewItem.PropertyChanged"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewItem.RaisePropertyChanged(System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewItem.Tag">
      <summary>Get/Set user-defined information</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.AutoComplete"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoComplete.AutoCompleteState">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.AutoComplete.AutoCompleteStateProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoComplete.GetAutoCompleteState(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoComplete.GetItemsSource(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoComplete.ItemsSource">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.AutoComplete.ItemsSourceProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoComplete.SetAutoCompleteState(System.Windows.DependencyObject,Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoComplete.SetItemsSource(System.Windows.DependencyObject,System.Collections.Generic.IEnumerable{System.String})"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState.FactoryGrid">
      <returns>Returns <see cref="T:System.Windows.FrameworkElementFactory" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState.Filter">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState.IgnoreSelectionChanged">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState.ListBox">
      <returns>Returns <see cref="T:System.Windows.Controls.ListBox" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState.ListBoxGettingFocus">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState.Popup">
      <returns>Returns <see cref="T:System.Windows.Controls.Primitives.Popup" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState.TextBox">
      <returns>Returns <see cref="T:System.Windows.Controls.TextBox" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.AutoCompleteState.TextBoxGettingFocus">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.BasePage"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BasePage.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BasePage.CanActivate(System.Exception@)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.BasePage.Changed"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BasePage.DefaultVisibility">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BasePage.HeadlineIcon">
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BasePage.HeadlineText">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BasePage.HelpContext">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BasePage.HelpPath">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BasePage.Id">
      <returns>Returns <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BasePage.Init(Microsoft.TeamFoundation.Controls.WPF.IPageNavigator)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BasePage.IsChecked">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BasePage.IsValid">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.BasePage.m_navigator"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BasePage.Microsoft#TeamFoundation#Controls#WPF#INavigationPage#Content">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BasePage.NavigationIcon">
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BasePage.NavigationText">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BasePage.OnChanged"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BasePage.ShowNavigationNodeEnabled">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BasePage.Validate(System.Exception@)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.BulletItem">
      <summary>BulletItem</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BulletItem.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BulletItem.BulletContent">
      <summary>Get/Set the bulleted content</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.BulletItem.BulletContentProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.BulletItem.BulletWidth">
      <summary>Get/Set the width of the bullet</summary>
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.BulletItem.BulletWidthProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BulletItem.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BulletItem.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.BusySpinner">
      <summary>BusySpinner</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BusySpinner.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BusySpinner.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BusySpinner.Pause"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BusySpinner.Resume"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.BusySpinner.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.ButtonClickedEventArgs"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ButtonClickedEventArgs.#ctor(Microsoft.TeamFoundation.Controls.WPF.ButtonType)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ButtonClickedEventArgs.ButtonType">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.ButtonType" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.ButtonClickedEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.ButtonStateEventArgs"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ButtonStateEventArgs.#ctor(Microsoft.TeamFoundation.Controls.WPF.ButtonType)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ButtonStateEventArgs.Button">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.ButtonType" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ButtonStateEventArgs.Enable">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.ButtonStateEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.ButtonType"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.ButtonType.None">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.ButtonType.Next">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.ButtonType.Previous">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.ButtonType.Finish">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.ButtonType.Cancel">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.CancelingEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.CharacterFilterFunction"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.ChecklistListView">
      <summary>Customized list view to show a checklist</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ChecklistListView.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ChecklistListView.Columns">
      <summary>Provide the column for the step progress list</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumn" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.ChecklistListView.ChecklistItem">
      <summary>Encapsulates a single checklist item for data binding</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ChecklistListView.ChecklistItem.#ctor(System.String)">
      <summary>Create a new checklist item</summary>
      <param name="description">operation description</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ChecklistListView.ChecklistItem.CheckImage">
      <summary>Get/Set the check image. The default is a check mark.</summary>
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ChecklistListView.ChecklistItem.DescriptionText">
      <summary>Get/Set the description text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ChecklistListView.ChecklistItem.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.CommandItem">
      <summary>This is for internal use only. Class to represent a command item without a dependency on WPF or other UI framework, so that view models can use this to populate command item data and the UI can be responsible for how is render using a DataTemplate.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommandItem.#ctor(System.String,System.Windows.Input.ICommand,System.Windows.Media.ImageSource)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommandItem.#ctor(System.String,System.Windows.Input.ICommand,System.Windows.Media.ImageSource,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommandItem.Command">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommandItem.Icon">
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommandItem.Param">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommandItem.Title">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete">
      <summary>CommonPageComplete</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.#ctor">
      <summary>Create a page complete control</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.ChecklistDataSource">
      <summary>Get the checklist items data source</summary>
      <returns>Returns <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.ChecklistHeaderText">
      <summary>Get/Set the checklist header text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.ChecklistHeaderTextProperty">
      <summary>ChecklistHeaderText dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.ChecklistVisibility">
      <summary>Get/Set true/false to show/hide the checklist and its header The checklist is hidden by default.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.ChecklistVisibilityProperty">
      <summary>ChecklistVisibility dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.CommentsText">
      <summary>Get/Set the error note text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.CommentsTextProperty">
      <summary>CommentsText dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.CommentsTextVisibility">
      <summary>Get/Set the error note text visibility</summary>
      <returns>Returns <see cref="T:System.Windows.Visibility" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.CommentsTextVisibilityProperty">
      <summary>CommentsTextVisibility dependency property</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.LogLocationClicked">
      <summary>Raised when the log location hyperlink is clicked or activated</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.LogLocationHeaderText">
      <summary>Get/Set the log location header text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.LogLocationHeaderTextProperty">
      <summary>LogLocationHeaderText dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.LogLocationText">
      <summary>Get/Set the log location text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.LogLocationTextProperty">
      <summary>LogLocationText dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.ReportingDataSource">
      <summary>Get the reporting items data source</summary>
      <returns>Returns <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.StatusListViewVisibility">
      <summary>Get/Set the error note text visibility</summary>
      <returns>Returns <see cref="T:System.Windows.Visibility" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.StatusListViewVisibilityProperty">
      <summary>StatusListViewVisibility dependency property</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageComplete.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress">
      <summary>CommonPageProgress</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.#ctor">
      <summary>Create a progress control</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.DataSource">
      <summary>Get the step progress items data source</summary>
      <returns>Returns <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.FootnoteText">
      <summary>Get/Set the footnote text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.FootnoteTextProperty">
      <summary>FootnoteText dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.FootnoteTextVisibility">
      <summary>Get/Set the visibility of the footnote text</summary>
      <returns>Returns <see cref="T:System.Windows.Visibility" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.FootnoteTextVisibilityProperty">
      <summary>FootnoteTextVisibility dependency property</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.ProgressBarIsIndeterminate">
      <summary>Get/Set the progress bar indeterminate flag</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.ProgressBarIsIndeterminateProperty">
      <summary>ProgressBarIsIndeterminate dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.ProgressBarMaximum">
      <summary>Get/Set the progress bar maximum value</summary>
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.ProgressBarMaximumProperty">
      <summary>ProgressBarMaximum dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.ProgressBarMinimum">
      <summary>Get/Set the progress bar minimum value</summary>
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.ProgressBarMinimumProperty">
      <summary>ProgressBarMinimum dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.ProgressBarText">
      <summary>Get/Set the progress text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.ProgressBarTextProperty">
      <summary>ProgressBarText dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.ProgressBarValue">
      <summary>Get/Set the progress bar value</summary>
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.ProgressBarValueProperty">
      <summary>ProgressBarValue dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.ProgressBarVisibility">
      <summary>Get/Set the visibility of the progress bar and its progress text</summary>
      <returns>Returns <see cref="T:System.Windows.Visibility" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.ProgressBarVisibilityProperty">
      <summary>ProgressBarVisibility dependency property</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.SetProgressBarMinMax(System.Double,System.Double)">
      <summary>Set the progress bar bounds</summary>
      <param name="minimum">minimum value</param>
      <param name="maximum">maximum</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.StepProgressBorderVisibility">
      <summary>Get/Set true/false to show/hide the step progress border</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.StepProgressBorderVisibilityProperty">
      <summary>StepProgressBorderVisibility dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.StepProgressHeaderVisibility">
      <summary>Get/Set true/false to show/hide the step progress header</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.StepProgressHeaderVisibilityProperty">
      <summary>StepProgressHeaderVisibility dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.StepProgressVisibility">
      <summary>Get/Set the visibility of the step progress list</summary>
      <returns>Returns <see cref="T:System.Windows.Visibility" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.StepProgressVisibilityProperty">
      <summary>StepProgressVisibility dependency property</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageProgress.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.CommonPageSummary">
      <summary>CommonPageSummary</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageSummary.#ctor">
      <summary>Create a new summary control</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageSummary.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageSummary.Sections">
      <summary>Get the summary sections</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageSummary.SummaryDescription">
      <summary>Get the description for the summary. This is the text to be displayed at the top of the summary grid.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageSummary.SummaryDescriptionProperty">
      <summary>SummaryDescription dependency property</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageSummary.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation">
      <summary>CommonPageValidation</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation.#ctor">
      <summary>Create a validation control</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation.DataSource">
      <summary>Get the step progress items data source</summary>
      <returns>Returns <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation.FootnoteText">
      <summary>Get/Set the foot note text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation.FootnoteTextProperty">
      <summary>FootnoteText dependency property</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation.StepProgressBorderVisibility">
      <summary>Get/Set true/false to show/hide the step progress border</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation.StepProgressBorderVisibilityProperty">
      <summary>StepProgressBorderVisibility dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation.StepProgressHeaderVisibility">
      <summary>Get/Set true/false to show/hide the step progress header</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation.StepProgressHeaderVisibilityProperty">
      <summary>StepProgressHeaderVisibility dependency property</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation.ValidatingItemsHeaderText">
      <summary>Get/Set the validating items' header text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.CommonPageValidation.ValidatingItemsHeaderTextProperty">
      <summary>ValidatingItemsHeaderText dependency property</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.ContextHelpProvider"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ContextHelpProvider.GetHelpKeyword(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ContextHelpProvider.GetHelpPath(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ContextHelpProvider.HelpKey">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ContextHelpProvider.HelpKeyword">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.ContextHelpProvider.HelpKeywordProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ContextHelpProvider.HelpPath">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.ContextHelpProvider.HelpPathProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ContextHelpProvider.SetHelpKeyword(System.Windows.DependencyObject,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ContextHelpProvider.SetHelpPath(System.Windows.DependencyObject,System.String)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.ContextMenuAdapter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ContextMenuAdapter.GetShowContextMenuCommand(System.Windows.UIElement)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ContextMenuAdapter.SetShowContextMenuCommand(System.Windows.UIElement,System.Windows.Input.ICommand)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ContextMenuAdapter.ShowContextMenuCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.ContextMenuAdapter.ShowContextMenuCommandProperty">
      <summary>Captures right-click, context menu keyboard key, and shift+F10 (the various ways of invoking a context menu) and, when any one of these occur, invokes the attached command.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.DialogMessageBox">
      <summary>DialogMessageBox</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DialogMessageBox.#ctor">
      <summary>For designer - do not use</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DialogMessageBox.#ctor(System.Windows.Forms.IWin32Window,System.String,System.String,System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.DialogMessageBox.DontPromptAgain">
      <summary>true if the user chose not to show the prompt again</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DialogMessageBox.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DialogMessageBox.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.DragDropCommandConverter">
      <summary>Allows a command to be hooked up to one of the DragDrop attached commands (DragSourceMoveCommand, DropTargetMoveCommand) that expects the contents of DragDropParameters.DraggedObjects to be passed as an argument rather that a DragDropParameters object itself.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DragDropCommandConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DragDropCommandConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DragDropCommandConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.DragDropCommandConverter.Default">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.DragDropCommandConverter" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.DraggableListBox"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggableListBox.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggableListBox.GetContainerForItemOverride">
      <returns>Returns <see cref="T:System.Windows.DependencyObject" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.DraggableListBoxItem"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggableListBoxItem.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggableListBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggableListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggableListBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.DraggableListView"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggableListView.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggableListView.GetContainerForItemOverride">
      <returns>Returns <see cref="T:System.Windows.DependencyObject" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.DraggableListViewItem"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggableListViewItem.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggableListViewItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggableListViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggableListViewItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.DraggedAdorner"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggedAdorner.#ctor(System.Object,System.Windows.DataTemplate,System.Windows.UIElement,System.Windows.Documents.AdornerLayer)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggedAdorner.ArrangeOverride(System.Windows.Size)">
      <returns>Returns <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggedAdorner.Detach"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggedAdorner.GetDesiredTransform(System.Windows.Media.GeneralTransform)">
      <returns>Returns <see cref="T:System.Windows.Media.GeneralTransform" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggedAdorner.GetVisualChild(System.Int32)">
      <returns>Returns <see cref="T:System.Windows.Media.Visual" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggedAdorner.MeasureOverride(System.Windows.Size)">
      <returns>Returns <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.DraggedAdorner.SetPosition(System.Double,System.Double)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.DraggedAdorner.VisualChildrenCount">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox">
      <summary>Provides the following functionality:- A validation delegate (ValidationCallback), which, if supplied, will be called whenever the Text value changes. If the delegate returns false, a red border is displayed. - A CharacterFilter property that takes a regular expression and filters out characters that do not match the regular expression.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.CharacterFilter">
      <summary>A .NET regular expression for filtering out unwanted characters. Therefore, for example, you could allow for 0-9 with the following expresssion : @"\d"</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.CharacterFilterProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.FilterFunction">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.CharacterFilterFunction" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.FilterFunctionProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.IsValid">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.IsValidProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.OnApplyTemplate"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.Revalidate"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.ValidationCallback">
      <summary>This delegate is called whenever the text in the control is changed. If the delegate returns false, then a red border is displayed around the control.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.FilteredValidationCallback" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.FilteredTextBox.ValidationCallbackProperty"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.FilteredTextValidations">
      <summary>Class that collects common callbacks.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.FilteredTextValidations.PortValidationCallback">
      <summary>Verifies that the supplied port value is between 1 and 65535</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.FilteredValidationCallback" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.FilteredValidationCallback"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.FinishingEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.FocusManagerExtensions"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.FocusManagerExtensions.GetFocusedVisual(System.Windows.DependencyObject)">
      <summary>Gets the first Visual ancestor for the focused element in a given Focus Scope.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.FocusServices">
      <summary>Provides static attached properties that can be set on WPF controls to customize their behavior.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.FocusServices.EnableGlobalSelectAllOnFocus">
      <summary>Enables the automatic selection of text box text on focus for the whole WPF application. An alternative to this is to use the</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.FocusServices.GetSelectAllTextOnFocus(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.FocusServices.SelectAllTextOnFocus">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.FocusServices.SelectAllTextOnFocusProperty">
      <summary>If set to true on a container, all of the descendant text boxes will have their text auto-selected when they gain keyboard focus.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.FocusServices.SetSelectAllTextOnFocus(System.Windows.DependencyObject,System.Boolean)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.HelpLink">
      <summary>Implements a hyperlink that can be associated with either an external help item (e.g. fwlink), or a contextual help keyword.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.HelpLink.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.HelpLink.ExternalHelpId">
      <summary>An external fwlink link id that will be opened in an external browser when the hyperlink is activated.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.HelpLink.ExternalHelpIdProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.HelpLink.HelpKeyword">
      <summary>A contextual help keyword that will be looked up in the context help system when the hyperlink is activated.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.HelpLink.HelpKeywordProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.HelpLink.HelpPath">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.HelpLink.HelpPathProperty">
      <summary>The help path defined for the contextual help (optional).</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.HelpLink.OnClick">
      <summary>Overridden to trigger either an external fwlink help, or to start the associated contextual help.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.HyperlinkHelper">
      <summary>this is a class primarily used to work around a bug in WPF 3.0 where, if you have a custom command on a Hyperlink and you try to use ApplicationCommands.Copy the link, you get a crash because it tries to serialize the custom command and it is not allowed in the source. the workaround is to just use this class to define the command instead of the Hyperlink.Command and everything else stays the same.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.HyperlinkHelper.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.HyperlinkHelper.Command">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.HyperlinkHelper.CommandProperty">
      <summary>DP for HyperlinkHelper.Command</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.HyperlinkHelper.GetCommand(System.Windows.DependencyObject)">
      <summary>make the attached prop available from XAML</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.HyperlinkHelper.SetCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)">
      <summary>make the attached prop available from XAML</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.INavigationButtonControl"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.INavigationButtonControl.ButtonClicked"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationButtonControl.EnableButton(Microsoft.TeamFoundation.Controls.WPF.ButtonType,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationButtonControl.FocusButton(Microsoft.TeamFoundation.Controls.WPF.ButtonType)">
      <summary>Set the keyboard focus to a button</summary>
      <param name="buttonType">which button</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationButtonControl.GetButtonText(Microsoft.TeamFoundation.Controls.WPF.ButtonType)">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationButtonControl.IsEnabled(Microsoft.TeamFoundation.Controls.WPF.ButtonType)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationButtonControl.IsVisible">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationButtonControl.SetButtonText(Microsoft.TeamFoundation.Controls.WPF.ButtonType,System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationButtonControl.VisibleButtons">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.ButtonType" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.INavigationHeadlineControl"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationHeadlineControl.Icon">
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationHeadlineControl.IsVisible">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationHeadlineControl.Text">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.INavigationNode"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationNode.AddNode(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationNode.CanActivate">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationNode.InsertNode(Microsoft.TeamFoundation.Controls.WPF.INavigationNode,System.Int32)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationNode.IsSeparator">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationNode.IsVisible">
      <summary>Get/Set true/false to show/hide the page. When a page is not visible, it is not shown in the page selector and it cannot be navigated to via Previous/Next.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationNode.Items">
      <returns>Returns <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationNode.Page">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPage" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationNode.Parent">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationNode" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationNode.RemoveNode(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationNode.RemovePage(System.Guid)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPage"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.CanActivate(System.Exception@)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.Changed"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.Content">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.DefaultVisibility">
      <summary>Get the default visibility for the page</summary>
      <returns>true to default to visible, false to default to hidden</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.HeadlineIcon">
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.HeadlineText">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.HelpContext">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.HelpPath">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.Id">
      <returns>Returns <see cref="T:System.Guid" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.Init(Microsoft.TeamFoundation.Controls.WPF.IPageNavigator)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.IsChecked">
      <summary>Get true/false to show the check mark for navigation node</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.IsValid">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.NavigationIcon">
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.NavigationText">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.ShowNavigationNodeEnabled">
      <summary>Get true/false to show the corresponding navigation node as enabled/disabled</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationPage.Validate(System.Exception@)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPageHost"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationPageHost.DisplayPage(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationPageHost.Enable(System.Boolean)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPolicy"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationPolicy.ButtonState(Microsoft.TeamFoundation.Controls.WPF.ButtonStateEventArgs,System.Boolean@)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationPolicy.CanActivate(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,System.Exception@,System.Boolean@)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationPolicy.Canceling(System.ComponentModel.CancelEventArgs,System.Boolean@)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationPolicy.Finishing(System.ComponentModel.CancelEventArgs,System.Boolean@)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationPolicy.Init(Microsoft.TeamFoundation.Controls.WPF.IPageNavigator)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationPolicy.Navigating(Microsoft.TeamFoundation.Controls.WPF.NavigatingEventArgs,System.Boolean@)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationPolicy.Validate(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,System.Exception@,System.Boolean@)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl.AddNode(Microsoft.TeamFoundation.Controls.WPF.INavigationNode,Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl.IsVisible">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl.ItemCheckmarkVisible">
      <summary>Get/Set true/false to show/hide the item check mark</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl.RefreshNodeVisibility(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl.RemoveNode(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl.Select(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl.SelectionChanged"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl.SelectionChanging"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl.SelectionDoubleClicked"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl.SetFocus"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl.UpdateNode(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.IndentWidthToMarginConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IndentWidthToMarginConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IndentWidthToMarginConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IndentWidthToMarginConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IndentWidthToMarginConverter.Default">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.IndentWidthToMarginConverter" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.ActivePage">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPage" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.AddPage(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.AddPage(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,Microsoft.TeamFoundation.Controls.WPF.INavigationPage,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.AddSeparator(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.AnyUI">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.AutoEnableButtons">
      <summary>Get/Set true/false to automatically enable/disable the navigation buttons</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.ButtonControl">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationButtonControl" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.ButtonState"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.Cancel"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.Canceled"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.Canceling"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.CanGoTo(System.Guid)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.CanGoToNext">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.CanGoToPrevious">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.EnableButton(Microsoft.TeamFoundation.Controls.WPF.ButtonType,System.Boolean)">
      <summary>Directly enable/disable a button</summary>
      <param name="buttonType">which button</param>
      <param name="enable">true to enable, false to disable</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.Finish"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.Finished"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.Finishing"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.GetChildren(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)">
      <summary>Get the list of children pages</summary>
      <returns>children pages</returns>
      <param name="page">parent page</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.GetPage(System.Guid)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPage" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.GetParent(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)">
      <summary>Get the parent page</summary>
      <returns>parent page or null</returns>
      <param name="page">child page</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.GetVisibility(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)">
      <summary>Get the visibility of the specified page.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
      <param name="page">which page</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.GoToPage(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.GoToPage(System.Guid)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.HasBeenActivated(System.Guid)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.HeadlineIcon">
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.HeadlineText">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.MoveNext"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.MovePrevious"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.Navigated"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.Navigating"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.NavigationTree">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationNode" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.PageAdded"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.PageControl">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPageHost" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.PageHeadlineControl">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationHeadlineControl" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.PageNodeDoubleClicked"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.PageRemoved"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.Pages">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.PageSelectorCheckmarkVisible">
      <summary>Get/Set true/false to show/hide the navigation node check mark</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.Policy">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPolicy" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.Properties">
      <returns>Returns <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.RegisteredPropertyChanged"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.RegisterProperty(System.ComponentModel.INotifyPropertyChanged,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.RegisterProperty(System.ComponentModel.INotifyPropertyChanged,System.String,System.String,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.RegisterProperty(System.Windows.DependencyObject,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.RegisterProperty(System.Windows.DependencyObject,System.String,System.String,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.RemovePage(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.RemovePage(System.Guid)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.SetButtonText(Microsoft.TeamFoundation.Controls.WPF.ButtonType,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.SetButtonText(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,Microsoft.TeamFoundation.Controls.WPF.ButtonType,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.SetVisibility(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,System.Boolean)">
      <summary>Show/Hide a page</summary>
      <param name="page">which page</param>
      <param name="visible">true to show, false to hide</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.ShowButtons">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.ShowHeadline">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.ShowTree">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.Start"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.TreeControl">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.VisibleButtons">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.ButtonType" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.IPageNavigator.WizardHeadlineControl">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationHeadlineControl" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.ItemsControlExtensions"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ItemsControlExtensions.GetItemContainers(System.Windows.Controls.ItemsControl)">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ItemsControlExtensions.GetSelectedItemContainers(System.Windows.Controls.ItemsControl)">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ItemsControlExtensions.GetSelectedItems(System.Windows.Controls.ItemsControl)">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox">
      <summary>LabeledTextBox</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.AcceptsReturn">
      <summary>Get/Set the text box value</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.AcceptsReturnProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.FocusTextBox">
      <summary>Attempt to set the focus on the text box.</summary>
      <returns>true if keyboard and logical focus were set to text box.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.Header">
      <summary>Get/Set the header text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.HeaderProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.HintText">
      <summary>Get/Set the hint text to display when the text box is empty</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.HintTextProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.IsReadOnly">
      <summary>Get/set the read-only flag.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.IsReadOnlyProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.IsRequired">
      <summary>Get/set the isRequired flag.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.IsRequiredProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.MaxLength">
      <summary>Get/Set the max length</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.MaxLengthProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.NameAndAutomationId">
      <summary>Set the text box name and automation Id</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.Text">
      <summary>Get/Set the text box value</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.LabeledTextBox.TextProperty"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.LeftRightPlacementToolTip">
      <summary>A tooltip providing custom placement heuristic of aligning to left, then right, and finally mouse position. This is motivated by scenario of user using placement targets which occupy full extent of monitor.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.LeftRightPlacementToolTip.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.LeftRightPlacementToolTip.ProvidePlacements(System.Windows.Size,System.Windows.Size,System.Windows.Point)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.MaxLengths">
      <summary>Defines maximum lengths that can be bound to WPF TextBoxes for limiting data input.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.MaxLengths.BaseUrlPath">
      <summary>Maximum length for a base URL. Used for some URLs like SharePoint Web Applications where the URL provided by the user is only a base URL and we must allow for room to add more to the end (Web service paths, site paths, etc).</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.MaxLengths.RelativePath">
      <summary>Maximum length for a SharePoint Web Application relative path.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.MaxLengths.ReportItemPath">
      <summary>Maximum SSRS report item path length.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.MaxLengths.Url">
      <summary>Maximum URL length.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.MaxLengths.UrlPath">
      <summary>Maximum URL path length.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.MultiSelectionHelper">
      <summary>Selection helper attached property class. This class provides attached properties for "binding" a WPF Selector control with an IList in a view model. Changes made to the selection in the control will be mirrored in an IList provided by the view model. If the view model's IList is an ObservableCollection, then this class will hook CollectionChanged and mirror the changes back into the view. The view model can also replace its complete collection at the same time (for efficiency) and the view's selection will be updated to match. If the target control is a UserControl that is not directly a Selector but contains a child that is a Selector, the SelectorSource attached property can be used from code-behind .cs file to specify the child. An example of a control such as this is WorkItemsList.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.MultiSelectionHelper.GetSelectedItems(System.Windows.FrameworkElement)">
      <summary>SelectedItems getter.</summary>
      <returns>Returns <see cref="T:System.Collections.IList" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.MultiSelectionHelper.GetSelectorSource(System.Windows.FrameworkElement)">
      <summary>SelectorSource getter.</summary>
      <returns>Returns <see cref="T:System.Windows.Controls.Primitives.Selector" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.MultiSelectionHelper.SelectedItems">
      <returns>Returns <see cref="T:System.Collections.IList" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.MultiSelectionHelper.SelectedItemsProperty">
      <summary>SelectedItems attached property.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.MultiSelectionHelper.SelectorSource">
      <returns>Returns <see cref="T:System.Windows.Controls.Primitives.Selector" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.MultiSelectionHelper.SelectorSourceProperty">
      <summary>SourceSelector attached property.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.MultiSelectionHelper.SetSelectedItems(System.Windows.FrameworkElement,System.Collections.IList)">
      <summary>SelectedItems setter.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.MultiSelectionHelper.SetSelectorSource(System.Windows.FrameworkElement,System.Windows.Controls.Primitives.Selector)">
      <summary>SelectorSource setter.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigatedEventArgs"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigatedEventArgs.#ctor(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigatedEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigatingEventArgs"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigatingEventArgs.#ctor(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigatingEventArgs.Cancel">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigatingEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigationButtonControl">
      <summary>NavigationButtonControl</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationButtonControl.#ctor"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.NavigationButtonControl.ButtonClicked"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationButtonControl.EnableButton(Microsoft.TeamFoundation.Controls.WPF.ButtonType,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationButtonControl.FocusButton(Microsoft.TeamFoundation.Controls.WPF.ButtonType)">
      <summary>Set the keyboard focus to a button</summary>
      <param name="buttonType">which button</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationButtonControl.GetButtonText(Microsoft.TeamFoundation.Controls.WPF.ButtonType)">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationButtonControl.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationButtonControl.IsVisible">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationButtonControl.Microsoft#TeamFoundation#Controls#WPF#INavigationButtonControl#IsEnabled(Microsoft.TeamFoundation.Controls.WPF.ButtonType)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationButtonControl.SetButtonText(Microsoft.TeamFoundation.Controls.WPF.ButtonType,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationButtonControl.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationButtonControl.VisibleButtons">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.ButtonType" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigationEventArgs"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationEventArgs.#ctor(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationEventArgs.FromPage">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPage" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationEventArgs.ToPage">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPage" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigationHeadlineControl">
      <summary>NavigationHeadlineControl</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationHeadlineControl.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationHeadlineControl.Icon">
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.NavigationHeadlineControl.IconProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationHeadlineControl.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationHeadlineControl.IsVisible">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationHeadlineControl.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationHeadlineControl.Text">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.NavigationHeadlineControl.TextProperty"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigationNode"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationNode.#ctor(Microsoft.TeamFoundation.Controls.WPF.INavigationNode,Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationNode.AddNode(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationNode.CanActivate">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationNode.InsertNode(Microsoft.TeamFoundation.Controls.WPF.INavigationNode,System.Int32)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationNode.IsSeparator">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationNode.IsVisible">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationNode.Items">
      <returns>Returns <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationNode.Page">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPage" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationNode.Parent">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationNode" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationNode.RemoveNode(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationNode.RemovePage(System.Guid)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigationPageHost">
      <summary>NavigationPageHost</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationPageHost.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationPageHost.DisplayPage(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationPageHost.Enable(System.Boolean)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationPageHost.Icon">
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationPageHost.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationPageHost.IsVisible">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationPageHost.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationPageHost.Text">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigationPropertyChangedEventArgs"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationPropertyChangedEventArgs.#ctor(System.Object,System.String,System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationPropertyChangedEventArgs.Id">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationPropertyChangedEventArgs.Path">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationPropertyChangedEventArgs.Source">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigationPropertyChangedEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl">
      <summary>NavigationTreeControl</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.AllowMouseNavigation">
      <summary>Get/set true/false to allow/disallow navigation in the tree using the mouse.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.AllowMouseNavigationProperty">
      <summary>AllowMouseNavigation dependency property</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.ItemCheckmarkVisible">
      <summary>Get/Set true/false to show/hide the item check mark</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.ItemCheckmarkVisibleProperty">
      <summary>ItemCheckmarkVisible dependency property</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.Microsoft#TeamFoundation#Controls#WPF#INavigationTreeControl#AddNode(Microsoft.TeamFoundation.Controls.WPF.INavigationNode,Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.Microsoft#TeamFoundation#Controls#WPF#INavigationTreeControl#IsVisible">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.Microsoft#TeamFoundation#Controls#WPF#INavigationTreeControl#ItemCheckmarkVisible">
      <summary>Get/Set true/false to show/hide the item check mark</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.Microsoft#TeamFoundation#Controls#WPF#INavigationTreeControl#RefreshNodeVisibility(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.Microsoft#TeamFoundation#Controls#WPF#INavigationTreeControl#RemoveNode(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.Microsoft#TeamFoundation#Controls#WPF#INavigationTreeControl#Select(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.Microsoft#TeamFoundation#Controls#WPF#INavigationTreeControl#UpdateNode(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.SelectionChanged"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.SelectionChanging"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.SelectionDoubleClicked"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.SetFocus"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeItem">
      <summary>Encapsulate an item in the navigation selector tree</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.NavigationTreeItem.#ctor(Microsoft.TeamFoundation.Controls.WPF.NavigationTreeControl,Microsoft.TeamFoundation.Controls.WPF.INavigationNode)">
      <summary>Create a new tree item</summary>
      <param name="ownerTreeControl">owner tree control</param>
      <param name="node">navigation node</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.PageAddedEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.PageEventArgs"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageEventArgs.#ctor(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageEventArgs.Page">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPage" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.PageNavigator">
      <summary>PageNavigator</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.ActivePage">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPage" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.AddPage(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.AddPage(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,Microsoft.TeamFoundation.Controls.WPF.INavigationPage,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.AddSeparator(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.AnyUI">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.AutoEnableButtons">
      <summary>Get/Set true/false to automatically enable/disable the navigation buttons</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.ButtonControl">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationButtonControl" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.ButtonState"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Cancel"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Canceled"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Canceling"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.CanGoTo(System.Guid)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.CanGoToNext">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.CanGoToPrevious">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.EnableButton(Microsoft.TeamFoundation.Controls.WPF.ButtonType,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Finish"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Finished"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Finishing"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.GetChildren(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)">
      <summary>Get the list of children pages</summary>
      <returns>children pages</returns>
      <param name="page">parent page</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.GetPage(System.Guid)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPage" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.GetPages">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.GetPages(Microsoft.TeamFoundation.Controls.WPF.INavigationNode,System.Collections.Generic.IList{Microsoft.TeamFoundation.Controls.WPF.INavigationPage})"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.GetParent(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)">
      <summary>Get the parent page</summary>
      <returns>parent page or null</returns>
      <param name="page">child page</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.GetVisibility(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)">
      <summary>Get visibility of a page</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
      <param name="page">which page</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.GoToPage(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.GoToPage(System.Guid)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.HasBeenActivated(System.Guid)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.HeadlineIcon">
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.HeadlineText">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Init"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.MoveNext"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.MovePrevious"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Navigated"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Navigating"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.NavigationTree">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationNode" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.PageAdded"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.PageControl">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPageHost" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.PageHeadlineControl">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationHeadlineControl" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.PageNodeDoubleClicked"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.PageRemoved"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Pages">
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.PageSelectorAllowMouseNavigation">
      <summary>Get/set true/false to allow/disallow mouse navigation in the selector.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.PageSelectorAllowMouseNavigationProperty">
      <summary>PageSelectorAllowMouseNavigation dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.PageSelectorCheckmarkVisible">
      <summary>Get/Set true/false to show/hide the navigation node check mark</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.PageSelectorCheckmarkVisibleProperty">
      <summary>PageSelectorCheckmarkVisible dependency property</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Policy">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationPolicy" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Properties">
      <returns>Returns <see cref="T:System.Collections.Generic.Dictionary`2" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.RegisteredPropertyChanged"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.RegisterProperty(System.ComponentModel.INotifyPropertyChanged,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.RegisterProperty(System.ComponentModel.INotifyPropertyChanged,System.String,System.String,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.RegisterProperty(System.Windows.DependencyObject,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.RegisterProperty(System.Windows.DependencyObject,System.String,System.String,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.RemovePage(Microsoft.TeamFoundation.Controls.WPF.INavigationPage)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.RemovePage(System.Guid)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.SetButtonText(Microsoft.TeamFoundation.Controls.WPF.ButtonType,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.SetButtonText(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,Microsoft.TeamFoundation.Controls.WPF.ButtonType,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.SetVisibility(Microsoft.TeamFoundation.Controls.WPF.INavigationPage,System.Boolean)">
      <summary>Show/Hide a page</summary>
      <param name="page">which page</param>
      <param name="visible">true to show, false to hide</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.ShowButtons">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.ShowHeadline">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.ShowTree">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.Start"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.TreeControl">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationTreeControl" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.VisibleButtons">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.ButtonType" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.PageNavigator.WizardHeadlineControl">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationHeadlineControl" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.PageNodeDoubleClickedEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.PageRemovedEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper">
      <summary>ScrollView helper attached property class. This class provides an attached property that allows for ItemsControls to scroll correctly via PageUp/PageDown requests when they are hosted in a TeamExplorer page. Prior/Next keyboard events are intercepted and re-routed to the parent ScrollViewer. After the scroll position has changed the ItemsControl's focus element is updated to the first visible element.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper.BindWidthToViewport"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper.BindWidthToViewportProperty">
      <summary>BindWidthToViewport attached property.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper.GetBindWidthToViewport(System.Windows.DependencyObject)">
      <summary>BindWidthToViewport getter.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper.GetReroutePriorAndNext(System.Windows.DependencyObject)">
      <summary>ReroutePriorAndNext getter.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper.GetUseSystemMouseWheelLineSettings(System.Windows.Controls.ScrollViewer)">
      <summary>Get the UseSystemMouseWheelLineSettings value.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper.ReroutePriorAndNext">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper.ReroutePriorAndNextProperty">
      <summary>ReroutePriorAndNext attached property.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper.SetBindWidthToViewport(System.Windows.DependencyObject,System.Boolean)">
      <summary>BindWidthToViewport setter.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper.SetReroutePriorAndNext(System.Windows.DependencyObject,System.Boolean)">
      <summary>ReroutePriorAndNext setter.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper.SetUseSystemMouseWheelLineSettings(System.Windows.Controls.ScrollViewer,System.Boolean)">
      <summary>Set the UseSystemMouseWheelLineSettings value. ScrollViewer does not understand the concept of lines because it contains arbitrary UI. Therefore, ScrollViewer does not obey the system mouse wheel scroll lines setting, which defaults to 3. Instead, the ScrollViewer treats a mouse wheel scroll increment as the equivalent of three taps of the inner scrollbar's arrow. Set this property to true to have the attached ScrollViewer obey the system mouse wheel scroll lines setting. It will scroll the equivalent of clicking the scrollbar arrow N times, where N is the system mouse wheel scroll lines setting.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper.UseSystemMouseWheelLineSettings">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.ScrollViewHelper.UseSystemMouseWheelLineSettingsProperty">
      <summary>UseSystemMouseWheelLineSettings attached property.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.SelectionChangingEventArgs"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.SelectionChangingEventArgs.#ctor(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.SelectionChangingEventArgs.Cancel">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.SelectionChangingEventArgs.Error">
      <returns>Returns <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.SelectionChangingEventArgs.Node">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationNode" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.SelectionChangingEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.SelectionDoubleClickedEventArgs"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.SelectionDoubleClickedEventArgs.#ctor(Microsoft.TeamFoundation.Controls.WPF.INavigationNode)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.SelectionDoubleClickedEventArgs.Node">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.INavigationNode" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.SelectionDoubleClickedEventHandler"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView">
      <summary>Customized list view to show errors, warnings, and success messages</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.Columns">
      <summary>Provide the columns definitions</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumn" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportingItem">
      <summary>Encapsulates a single reporting item for data binding</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportingItem.#ctor(Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewHyperlink,Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportItemStatus)">
      <summary>Create a new reporting item</summary>
      <param name="descriptionHyperlink">operation description hyperlink (optional)</param>
      <param name="status">report status</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportingItem.DescriptionHyperlink">
      <summary>Get/Set the description hyperlink</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewHyperlink" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportingItem.ReportStatus">
      <summary>Get/Set the report status</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportItemStatus" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportingItem.ReportStatusText">
      <summary>Get/Set the status text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportingItem.StatusImage">
      <summary>Get/Set the status image</summary>
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportingItem.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportItemStatus">
      <summary>Report item status</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportItemStatus.Success">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportItemStatus.Warning">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.StatusReportingListView.ReportItemStatus.Error">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView">
      <summary>Customized list view to show a step-progress list</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.Columns">
      <summary>Provide the column for the step progress list</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewColumn" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.ProgressState">
      <summary>Progress item states</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.ProgressState.None">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.ProgressState.Passed">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.ProgressState.Warning">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.ProgressState.Error">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.ProgressState.InProgress">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.ProgressState.Complete">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.ProgressState.Cancelled">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.ProgressState.NotStarted">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.StepProgressItem">
      <summary>Encapsulates a single progress item for data binding</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.StepProgressItem.#ctor(System.String,Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.ProgressState)">
      <summary>Create a new step progress item</summary>
      <param name="description">operation description</param>
      <param name="state">initial state</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.StepProgressItem.DescriptionText">
      <summary>Get/Set the description text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.StepProgressItem.ProgressState">
      <summary>Get/Set the progress status state</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.ProgressState" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.StepProgressItem.ProgressStateCallback">
      <summary>Get/Set the progress status state callback. If the callback is non-null, the status text is shown as a hyperlink. Otherwise the status text is shown as ordinary text.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewHyperlink.HyperlinkCallback" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.StepProgressItem.StatusHyperlink">
      <summary>Get/Set the status hyperlink</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.AutoColumnListViewHyperlink" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.StepProgressItem.StatusImage">
      <summary>Get/Set the status image</summary>
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.StepProgressListView.StepProgressItem.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.SummarySection">
      <summary>Encapsulate a section in the summary</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.SummarySection.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.SummarySection.Caption">
      <summary>Get/Set the caption</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.SummarySection.Items">
      <summary>Get/Set the collection of sections</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.SummarySection.Tag">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.SummarySectionItem">
      <summary>Encapsulate an item in a summary section</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.SummarySectionItem.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.SummarySectionItem.#ctor(System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.SummarySectionItem.#ctor(System.String,System.String,System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.SummarySectionItem.Description">
      <summary>Get/Set the description</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.SummarySectionItem.ErrorText">
      <summary>Error text that is shown instead of the value when the value is not available.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.SummarySectionItem.ItemClickCallback">
      <summary>Get/Set the callback when the item is clicked. If this callback is non-null, the description text will be shown as a hyperlink.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.SummarySectionItemClickedCallback" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.SummarySectionItem.Name">
      <summary>Get/Set the name</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.SummarySectionItem.Tag">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.SummarySectionItemClickedCallback">
      <summary>Delegate for callback when a hyper-linked item is clicked.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors">
      <summary>Colors used by Team Foundation components. The colors are auto-generated into this partial class via the TeamFoundationColors.tt.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ActionLinkColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ActionLinkDisabledColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ActionLinkItemColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ActionLinkItemDisabledColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ActionLinkItemHoverColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ActionLinkItemSelectedColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ActionLinkItemSelectedNotFocusedColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ArrowGlyphColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ArrowGlyphMouseOverColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.BodyTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ButtonBackgroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ButtonBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ButtonDisabledBackgroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ButtonDisabledBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ButtonDisabledForegroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ButtonForegroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ButtonHoverBackgroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ButtonHoverBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ButtonHoverForegroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ButtonPressedBackgroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ButtonPressedBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ButtonPressedForegroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.CodeReviewDiscussionSelectedActionLinkColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.CodeReviewDiscussionSelectedItemColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.CodeReviewDiscussionSelectedItemColorTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ConvertToWinFormsColor(System.Windows.Media.Color)">
      <returns>Returns <see cref="T:System.Drawing.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.DefaultSelectedAnchorPointBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.DefaultSelectedAnchorPointColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.DefaultSelectedCommentAnchorBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.DefaultSelectedCommentAnchorFillColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.DefaultUnselectedAnchorPointBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.DefaultUnselectedAnchorPointColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.DefaultUnselectedCommentAnchorBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.DefaultUnselectedCommentAnchorFillColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.EmbeddedDialogBackgroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.EmphasizedTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.IconActionFillColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.IconGeneralFillColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.IconGeneralStrokeColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.InnerTabActiveBackgroundColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.InnerTabActiveTextColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.InnerTabHeaderBackgroundColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.InnerTabHeaderTextColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.InnerTabHoverBackgroundColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.InnerTabHoverTextColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.InnerTabInactiveBackgroundColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.InnerTabInactiveTextColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.InnerTabPressedBackgroundColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.InnerTabPressedTextColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.Instance">
      <summary>Singleton instance of TeamFoundationColors.</summary>
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemHoverBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemHoverGradientEndColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemHoverGradientStartColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemHoverTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemSelectedBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemSelectedBorderNotFocusedColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemSelectedColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemSelectedNotFocusedColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemSelectedTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemSelectedTextNotFocusedColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ItemTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.MenuBackgroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.MenuBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.MenuHoverBackgroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.MenuHoverTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.MenuSeparatorColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.MenuTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.NotificationActionLinkColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.NotificationColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.NotificationTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ProgressBarBackgroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ProgressBarForegroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.PropertyChanged"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.RequiredTextBoxBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ScrollBarBackgroundColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.SectionTitleTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.SubduedBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.SubduedTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.SubtitleTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.TextBoxBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.TextBoxColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.TextBoxHintTextColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.TextBoxTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.TitleBarInactiveColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.TitleBarInactiveTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.TitleTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ToolbarColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ToolbarSelectedBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ToolbarSelectedColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ToolbarSelectedTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ToolbarTextColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ToolWindowBackgroundColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.ToolWindowBorderColor">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.VersionControlAnnotateRegionBackgroundColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.VersionControlAnnotateRegionForegroundColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.VersionControlAnnotateRegionSelectedBackgroundColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.VersionControlAnnotateRegionSelectedForegroundColor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemActiveControlBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemActiveControlBorder">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemActiveControlForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemButtonSelectedOverride">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemDefaultControlBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemDefaultControlBorder">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemDefaultControlForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemDropDownHoverBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemDropDownHoverForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemDropDownPressedBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemDropDownPressedForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemErrorControlBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemErrorControlBorder">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemErrorControlForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemFormBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemFormForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridActiveCellBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridActiveCellForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridActiveColumnHeaderBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridActiveColumnHeaderForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridActiveRowHeaderBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridActiveRowHeaderForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridBorder">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridCellBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridCellForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridColumnHeaderBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridColumnHeaderForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridColumnHeaderHoverBackground"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridColumnHeaderHoverForeground"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridColumnHeaderPressedBackground"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridColumnHeaderPressedForeground"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridInactiveCellBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridInactiveCellForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridRowHeaderBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridRowHeaderForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridSortedCellBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGridSortedCellForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGroupBoxBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemGroupBoxForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemHtmlControlBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemHtmlControlForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemHtmlControlHyperlink">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemHtmlControlSecondaryText"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemHtmlScrollbarArrow"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemHtmlScrollbarThumb"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemHtmlScrollbarTrack"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemInvalidControlBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemInvalidControlBorder">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemInvalidControlForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemLabelBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemLabelForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemPromptText"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemReadOnlyControlBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemReadOnlyControlBorder">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemReadOnlyControlForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemTabHeaderActiveForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemTabHeaderBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemTabHeaderForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemTabHeaderHoverForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemTabItemBackground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationColors.WorkItemTabItemForeground">
      <returns>Returns <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.ActionLinkFontSize">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.BodyFontSize">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.DocumentHeadingFontSize">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.DocumentLinkFontSize">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.DocumentSectionHeadingFontSize">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.EmphasizedFontSize">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.Instance">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.NotificationFontSize">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.OnPropertyChanged"></member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.PropertyChanged"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.SectionTitleFontSize">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.SubduedFontSize">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.SubtitleFontSize">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamFoundationFonts.TitleFontSize">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TextBullet">
      <summary>TextBullet</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TextBullet.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TextBullet.BulletText">
      <summary>Get/Set the bullet text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TextBullet.BulletTextProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TextBullet.BulletWidth">
      <summary>Get/Set the width of the bullet</summary>
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TextBullet.BulletWidthProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TextBullet.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TextBullet.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TreeViewExtensions"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TreeViewExtensions.ContainerFromItem(System.Windows.Controls.TreeView,System.Object)">
      <returns>Returns <see cref="T:System.Windows.DependencyObject" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TreeViewItemExtensions"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TreeViewItemExtensions.GetIndentWidth(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TreeViewItemExtensions.IndentWidth">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TreeViewItemExtensions.IndentWidthProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TreeViewItemExtensions.SetIndentWidth(System.Windows.DependencyObject,System.Double)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Watermark">
      <summary>A helper class that contains attached properties to support watermarks for TextBox and ComboBox controls: HintText: an attached property that shows what is the hint text for the control ImageSource: an attached property that points to the image source for the image to show inside the control or Image: an attached property that points to the image to show inside the control</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.GetHasActualText(System.Windows.DependencyObject)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.GetHintText(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.GetImage(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.GetShowImageOnRight(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.GetShowToolTip(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.GetWatermarkState(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.WatermarkState" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Watermark.HasActualText"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Watermark.HasActualTextProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Watermark.HintText">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Watermark.HintTextProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Watermark.Image">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Watermark.ImageProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.RebuildWatermarkState(Microsoft.TeamFoundation.Controls.WPF.WatermarkState)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.SetHasActualText(System.Windows.DependencyObject,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.SetHintText(System.Windows.DependencyObject,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.SetImage(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.SetShowImageOnRight(System.Windows.DependencyObject,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.SetShowToolTip(System.Windows.DependencyObject,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Watermark.SetWatermarkState(System.Windows.DependencyObject,Microsoft.TeamFoundation.Controls.WPF.WatermarkState)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Watermark.ShowImageOnRight">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Watermark.ShowImageOnRightProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Watermark.ShowToolTip">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Watermark.ShowToolTipProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Watermark.WatermarkState">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.WatermarkState" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Watermark.WatermarkStateProperty"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner.#ctor(Microsoft.TeamFoundation.Controls.WPF.WatermarkState)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner.ArrangeOverride(System.Windows.Size)">
      <returns>Returns <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner.Attach"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner.ContentPresenter">
      <returns>Returns <see cref="T:System.Windows.Controls.ContentPresenter" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner.Detach"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner.GetVisualChild(System.Int32)">
      <returns>Returns <see cref="T:System.Windows.Media.Visual" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner.HideText"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner.MeasureOverride(System.Windows.Size)">
      <returns>Returns <see cref="T:System.Windows.Size" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner.ShowText"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner.State">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.WatermarkState" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner.VisualChildrenCount">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.WatermarkState"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WatermarkState.#ctor(System.Windows.Controls.Control)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkState.Adorner">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.WatermarkAdorner" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkState.Control">
      <returns>Returns <see cref="T:System.Windows.Controls.Control" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkState.HasActualText"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkState.HintText">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkState.Image">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkState.IsInitialized">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkState.OriginalPadding">
      <returns>Returns <see cref="T:System.Windows.Thickness" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkState.ShowImageOnRight">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkState.ShowToolTip">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WatermarkState.TextBox">
      <returns>Returns <see cref="T:System.Windows.Controls.TextBox" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant">
      <summary>This class styles a WPF window according to the Visual Studio standards. Create this class in the constructor of the class and keep a reference to it until after the window is closed.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.#ctor(System.Windows.Window)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.#ctor(System.Windows.Window,System.Boolean)">
      <summary>styles a WPF window according to the Visual Studio standards. remembers its size and position</summary>
      <param name="window">the window to style</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.#ctor(System.Windows.Window,System.Boolean,System.Boolean)">
      <summary>styles a WPF window according to the Visual Studio standards. remembers its size and position</summary>
      <param name="window">the window to style</param>
      <param name="autoMinSize">if true MinSize will be calculated based on preferred size, SizeToContent will be switched to manual</param>
      <param name="autoScaleFont">if true the window size will scale up based on the font size</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.DisableCloseButton">
      <summary>This property controls whether this window has a close button.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.DisableContextHelp">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.GetWaitCursor">
      <summary>Call this method to change the window cursor to a wait cursor. Disposing the WaitCursor object returned will restore the previous cursor.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.Handle">
      <returns>Returns <see cref="T:System.IntPtr" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.HandleSource">
      <returns>Returns <see cref="T:System.Windows.Interop.HwndSource" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.HelpTopic">
      <summary>Owning classes must set this to their help topic string.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.InitializeWindowStyle"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.SaveRestorePosition">
      <summary>This property controls whether dialog size and position will automatically be saved and restored during OnLoad and OnFormClosing.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.SetOwner(System.IntPtr)">
      <summary>Call this method to set the owner of the Window from a window handle.  For a modal dialog this property must be set.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.SetOwner(System.Windows.Forms.Form)">
      <summary>Call this method to set the owner of the Window from a WinForms form.  For a modal dialog this property must be set.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.SetOwner(System.Windows.Interop.IWin32Window)">
      <summary>Call this method to set the owner of the Window from an IWin32Window.  For a modal dialog this property must be set.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.SetOwner(System.Windows.Window)">
      <summary>Call this method to set the owner of the Window. For a modal dialog this property must be set.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.ShowDialog(System.Windows.Window)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.ShowHelpButton">
      <summary>This property controls whether this window appears in the taskbar.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.ShowInTaskbar">
      <summary>This property controls whether this window appears in the taskbar.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.WpfDialogAssistant.UseModalDialogStyling">
      <summary>This property controls whether this window is styled as a modal dialog box. When true, the dialog box will not have maximize, minimize, and help buttons.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Commands.AggregateCommand">
      <summary>AggregateCommand combines multiple commands into a single command. It's useful to execute multiple commands from a single action.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.AggregateCommand.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.AggregateCommand.CanExecute(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.Commands.AggregateCommand.CanExecuteChanged"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Commands.AggregateCommand.Commands">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandCollection" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.AggregateCommand.CreateInstanceCore">
      <returns>Returns <see cref="T:System.Windows.Freezable" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.AggregateCommand.Execute(System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.AggregateCommand.FreezeCore(System.Boolean)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandCollection"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandCollection.#ctor"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandReference">
      <summary>CommandReference provides a layer of indirection for commands. It's useful when you want to bind a command to a Command property that exists on an object that is not a DependencyObject.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandReference.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandReference.CanExecute(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandReference.CanExecuteChanged"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandReference.Command">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandReference.CommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandReference.CommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandReference.CommandProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandReference.CreateInstanceCore">
      <returns>Returns <see cref="T:System.Windows.Freezable" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandReference.Execute(System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.CommandReference.FreezeCore(System.Boolean)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Commands.ExpandCollapseCommand"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.ExpandCollapseCommand.#ctor(System.Boolean)">
      <summary>Creates a new instance of the ExpandCollapseCommand.</summary>
      <param name="expandOnExecute">True to expand the Expander when the command executes. False to collapse the Expander when the command executes.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.ExpandCollapseCommand.CanExecute(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.Commands.ExpandCollapseCommand.CanExecuteChanged"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Commands.ExpandCollapseCommand.Collapse">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.Commands.ExpandCollapseCommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.ExpandCollapseCommand.Execute(System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Commands.ExpandCollapseCommand.Expand">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.Commands.ExpandCollapseCommand" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Commands.FocusCommand"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.FocusCommand.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.FocusCommand.CanExecute(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.Commands.FocusCommand.CanExecuteChanged"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Commands.FocusCommand.Default">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.Commands.FocusCommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.FocusCommand.Execute(System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Commands.SetterCommand">
      <summary>Use this command to bind a "Property" with a "Value" on execution of this command. This is useful to bind any regular .net property from the view in order to set its valueon the execution of this command.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.SetterCommand.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.SetterCommand.CanExecute(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.Controls.WPF.Commands.SetterCommand.CanExecuteChanged"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.SetterCommand.CreateInstanceCore">
      <returns>Returns <see cref="T:System.Windows.Freezable" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.SetterCommand.Execute(System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Commands.SetterCommand.FreezeCore(System.Boolean)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Commands.SetterCommand.Property">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Commands.SetterCommand.PropertyProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Commands.SetterCommand.Value">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Commands.SetterCommand.ValueProperty"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.AllTrueToVisibleConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.AllTrueToVisibleConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.AllTrueToVisibleConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>If all values are true bools, returns Visibility.Visible. Any other value combination including null or an empty list returns Visibility.Collapsed (or Visibility.Hidden if parameter includes "Hidden"). If the parameter contains "Not", "!", or "Invert", the result from the bool evaluation is inverted before it is converted to Visibility.</summary>
      <returns>converted Visibility</returns>
      <param name="values">list of bools</param>
      <param name="targetType">output type - Must be Visibility</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the bool evaluation result before converting to Visibility. "Hidden" to have Visibility.Hidden instead of the default Visibility.Collapsed.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.AllTrueToVisibleConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.AnyTrueToVisibleConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.AnyTrueToVisibleConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.AnyTrueToVisibleConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>If any value is true bool, returns Visibility.Visible. Any other value combination including null or an empty list returns Visibility.Collapsed (or Visibility.Hidden if parameter includes "Hidden"). If the parameter contains "Not", "!", or "Invert", the result from the bool evaluation is inverted before it is converted to Visibility.</summary>
      <returns>converted Visibility</returns>
      <param name="values">list of bools</param>
      <param name="targetType">output type - Must be Visibility</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the bool evaluation result before converting to Visibility. "Hidden" to have Visibility.Hidden instead of the default Visibility.Collapsed</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.AnyTrueToVisibleConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.AreAllEqualConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.AreAllEqualConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.AreAllEqualConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>If all values (including all nulls) are equal (evaluated using Object.Equals), returns true. For any other value combination including null array or empty array, returns false. If the parameter contains "Not", "!", or "Invert", the result is inverted.</summary>
      <returns>bool</returns>
      <param name="values">values</param>
      <param name="targetType">output type - Must be bool</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the result.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.AreAllEqualConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.ArithmeticConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.ArithmeticConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.ArithmeticConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.ArithmeticConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Converters.ArithmeticConverter.Operand">
      <returns>Returns <see cref="T:System.Double" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Converters.ArithmeticConverter.Operator">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.Controls.WPF.Converters.ArithmeticOperator" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.ArithmeticOperator"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Converters.ArithmeticOperator.Addition">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Converters.ArithmeticOperator.Subtraction">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Converters.ArithmeticOperator.Multiplication">
      <summary />
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.Converters.ArithmeticOperator.Division">
      <summary />
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.BoolInvertConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.BoolInvertConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.BoolInvertConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Invert the value of bool (or bool?). For non-bool or bool? without value, returns true (or false if parameter contains "DefaultFalse").</summary>
      <returns>converted bool</returns>
      <param name="value">input bool or bool? (can be null)</param>
      <param name="targetType">output type - Must be bool</param>
      <param name="parameter">comma-separated options. "DefaultFalse" to obtain false for non-bool or bool? without value.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.BoolInvertConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Invert the value of bool (or bool?). For non-bool or bool? without value, true (or false if parameter contains "FalseForNonValue") is returned.</summary>
      <returns>converted bool</returns>
      <param name="value">input bool or bool? (can be null)</param>
      <param name="targetType">output type - Must be bool</param>
      <param name="parameter">comma-separated options. "DefaultFalse" to obtain false for non-bool or bool? without value.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.DateTimeToStringConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.DateTimeToStringConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.DateTimeToStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Convert DateTime to String. If value is null or is not typed DateTime, String.Empty (or String in parameter[1]) is returned.</summary>
      <returns>converted date time text</returns>
      <param name="value">DateTime (can be null)</param>
      <param name="targetType">output type - Must be String</param>
      <param name="parameter">optional String or String[]. Parameter[0] as the DateTime format (like "g"). Parameter[1] as the default output string if input value is null or is not typed DateTime. If only the DateTime format is needed, the formatting String can be used instead of String[].</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.DateTimeToStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.DebugTriggerConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.DebugTriggerConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.DebugTriggerConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Trigger the debugger</summary>
      <returns>Binding.DoNothing</returns>
      <param name="value">unused</param>
      <param name="targetType">unused</param>
      <param name="parameter">unused</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.DebugTriggerConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.IconToImageSourceConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IconToImageSourceConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IconToImageSourceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IconToImageSourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.ImageToImageSourceConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.ImageToImageSourceConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.ImageToImageSourceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.ImageToImageSourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.IntToBoolConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IntToBoolConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IntToBoolConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts int != 0 to true and int == 0 to false. If the parameter contains "Not", "!", or "Invert", the result is inverted before converting to bool.</summary>
      <returns>converted bool</returns>
      <param name="value">input int or int?</param>
      <param name="targetType">output type - Must be Visibility</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the bool evaluation result.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IntToBoolConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.IntToVisibleConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IntToVisibleConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IntToVisibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts int != 0 to Visibility.Visible and int == 0 to Visibility.Collapsed (or Visibility.Hidden if parameter contains "Hidden"). If the parameter contains "Not", "!", or "Invert", the result is inverted before converting to Visibility.</summary>
      <returns>converted Visibility</returns>
      <param name="value">input int or int?</param>
      <param name="targetType">output type - Must be Visibility</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the bool evaluation result before converting to Visibility. "Hidden" to have Visibility.Hidden instead of the default Visibility.Collapsed.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IntToVisibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.IsAllTrueConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsAllTrueConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsAllTrueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>If all values are true bools, returns true. Any other value combination including null or an empty list returns false. Non-bool values are treated as false. If the parameter contains "Not", "!", or "Invert", the result is inverted.</summary>
      <returns>bool result</returns>
      <param name="values">list of bools</param>
      <param name="targetType">output type - Must be bool</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the result.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsAllTrueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.IsAnyTrueConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsAnyTrueConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsAnyTrueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>If any value is a true bool, returns true. Any other value combination including null or an empty list returns false. If the parameter contains "Not", "!", or "Invert", the result is inverted.</summary>
      <returns>bool result</returns>
      <param name="values">list of bools</param>
      <param name="targetType">output type - Must be bool</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the result.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsAnyTrueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.IsDerivedFromConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsDerivedFromConverter.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Converters.IsDerivedFromConverter.AllowCollection">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsDerivedFromConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsDerivedFromConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Converters.IsDerivedFromConverter.Type">
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.IsNonEmptyStringConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsNonEmptyStringConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsNonEmptyStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Returns true for a non-null non-empty string and false otherwise. If the parameter contains "Not", "!", or "Invert", the result is inverted.</summary>
      <returns>converted bool</returns>
      <param name="value">String (can be null)</param>
      <param name="targetType">output type - Must be bool</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the result.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsNonEmptyStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.IsNonWhitespaceStringConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsNonWhitespaceStringConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsNonWhitespaceStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Returns true for a non-null non-empty, non-whitespace string and false otherwise. If the parameter contains "Not", "!", or "Invert", the result is inverted.</summary>
      <returns>converted bool</returns>
      <param name="value">String (can be null)</param>
      <param name="targetType">output type - Must be bool</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the result.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsNonWhitespaceStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.IsNullConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsNullConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsNullConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a null value to a true bool and any other value to a false bool. If the parameter contains "Not", "!", or "Invert", the result is inverted.</summary>
      <returns>converted bool</returns>
      <param name="value">null or non-null</param>
      <param name="targetType">output type - Must be bool</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the result.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsNullConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.IsParentConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsParentConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsParentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.IsParentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.Converters.IsParentConverter.TypeOfParent">
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.LeftEllipsisTextBlockConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.LeftEllipsisTextBlockConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.LeftEllipsisTextBlockConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.LeftEllipsisTextBlockConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.NonEmptyStringToParameterConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.NonEmptyStringToParameterConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.NonEmptyStringToParameterConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>If the bound string value is non-null and non-empty, return the string passed in as the converter parameter. Otherwise, return null.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <param name="value">input string (can be null)</param>
      <param name="targetType">output type - Must be string</param>
      <param name="parameter">String to return if the input string is non-null and non-empty</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.NonEmptyStringToParameterConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.NonEmptyStringToVisibleConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.NonEmptyStringToVisibleConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.NonEmptyStringToVisibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Convert non-null non-empty string to Visibility.Visible and any other value to Visibility.Collapsed (or Visibility.Hidden if parameter contains "Hidden"). If the parameter contains "Not", "!", or "Invert", the string evaluation result is inverted before converting to Visibility.</summary>
      <returns>converted Visibility</returns>
      <param name="value">input string (can be null)</param>
      <param name="targetType">output type - Must be Visibility</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the bool evaluation result before converting to Visibility. "Hidden" to have Visibility.Hidden instead of the default Visibility.Collapsed.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.NonEmptyStringToVisibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.NullToVisibleConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.NullToVisibleConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.NullToVisibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a null value to Visibility.Visible and any other value to Visibility.Collapsed (or Visibility.Hidden if parameter contains "Hidden").</summary>
      <returns>converted Visibility</returns>
      <param name="value">null or non-null</param>
      <param name="targetType">output type - Must be Visibility</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the bool evaluation before converting to Visibility. "Hidden" to have Visibility.Hidden (where the default is Visibility.Collapsed).</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.NullToVisibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.RelayConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.RelayConverter.#ctor(System.Func`5,System.Byte)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.RelayConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.RelayConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.StringFormatConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.StringFormatConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.StringFormatConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Use String.Format() to format an array of values into a string by using the formatting string in parameter. If values cannot be formatted, String.Empty is returned.</summary>
      <returns>formatted string</returns>
      <param name="values">values to format into a string</param>
      <param name="targetType">output type - must be assignable from string</param>
      <param name="parameter">required - formatting string</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.StringFormatConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.StringsSameToVisibleConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.StringsSameToVisibleConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.StringsSameToVisibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Compare value and parameter (parameter[0]) for exact (StringComparison.Ordinal) string equality. If the strings are both null or are identical, Visibility.Visible is returned. Otherwise Visibility.Collapsed (or Visibility.Hidden if parameter[1] contains "Hidden") is returned. If the parameter contains "Not", "!", or "Invert", the string comparison result is inverted before converting to Visibility.</summary>
      <returns>converted Visibility</returns>
      <param name="value">first input string (can be null)</param>
      <param name="targetType">output type - Must be Visibility</param>
      <param name="parameter">String or String[]: String or String[0] as the second string for comparison. Comma-separated options in Parameter[1]: "Not", "!", or "Invert" to invert the string comparison result before converting to Visibility.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.StringsSameToVisibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.StringToHyperlinkMarkdownConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.StringToHyperlinkMarkdownConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.StringToHyperlinkMarkdownConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Returns the passed in string with URIs (e.g. http://, ftp://), UNC paths (\\server\share), and e-mail addresses (a@b.c) converted to markdown.</summary>
      <param name="value">input string (can be null)</param>
      <param name="targetType">output type - Must be string</param>
      <param name="parameter">ignored</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.StringToHyperlinkMarkdownConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.TextBlockFitComparer"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.TextBlockFitComparer.#ctor(System.String,System.Windows.Controls.TextBlock)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.TextBlockFitComparer.Compare(System.Object,System.Object)">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.TrueToVisibleConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.TrueToVisibleConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.TrueToVisibleConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts true of bool (or bool?) to Visibility.Visible and any other value to Visibility.Collapsed (or Visibility.Hidden if parameter contains "Hidden"). If the parameter contains "Not", "!", or "Invert", the result is inverted before converting to Visibility.</summary>
      <returns>converted Visibility</returns>
      <param name="value">input bool or bool?</param>
      <param name="targetType">output type - Must be Visibility</param>
      <param name="parameter">comma-separated options. "Not", "!", or "Invert" to invert the bool evaluation result before converting to Visibility. "Hidden" to have Visibility.Hidden instead of the default Visibility.Collapsed.</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.TrueToVisibleConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.TruncateWordConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.TruncateWordConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.TruncateWordConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.TruncateWordConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.Converters.VisibilityInvertConverter"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.VisibilityInvertConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.VisibilityInvertConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Convert Visibility.Visible to Visibility.Collapsed (or Visibility.Hidden if parameter contains "Hidden") and Visibility.Collapsed or Visibility.Hidden to Visibility.Visible.</summary>
      <returns>inverted Visibility</returns>
      <param name="value">Visibility input</param>
      <param name="targetType">output type - Must be Visibility</param>
      <param name="parameter">comma-separated options. "Hidden" to have Visibility.Hidden (where the default is Visibility.Collapsed).</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.Converters.VisibilityInvertConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Convert Visibility.Visible to Visibility.Collapsed (or Visibility.Hidden if parameter contains "Hidden") and Visibility.Collapsed or Visibility.Hidden to Visibility.Visible.</summary>
      <returns>inverted Visibility</returns>
      <param name="value">Visibility input</param>
      <param name="targetType">output type - Must be Visibility</param>
      <param name="parameter">comma-separated options. "Hidden" to have Visibility.Hidden (where the default is Visibility.Collapsed).</param>
      <param name="culture">caller culture</param>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink">
      <summary>DropDownLink</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.DropDownMenu">
      <summary>Get/Set the dropdown menu</summary>
      <returns>Returns <see cref="T:System.Windows.Controls.ContextMenu" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.DropDownMenuCommand">
      <summary>Get/Set the command to show the dropdown menu.</summary>
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.DropDownMenuCommandParameter">
      <summary>Get/Set the command to show the dropdown menu.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.DropDownMenuCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.DropDownMenuCommandProperty"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.DropDownMenuProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.LinkTextProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.OnCreateAutomationPeer">
      <summary>OnCreateAutomationPeer override.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.ShowArrow">
      <summary>Show/hide the arrow.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.ShowArrowProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.Text">
      <summary>Get/Set the link text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.DropDownMenuCommandParameters">
      <summary>Simple class to hold screen position and Parameter when it is passed in for the DropDownMenu command</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.DropDownMenuCommandParameters.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.DropDownMenuCommandParameters.Parameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.DropDownLink.DropDownMenuCommandParameters.Point">
      <returns>Returns <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IIndentedListViewItemDataSource">
      <summary>Interface for an indented item list view</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IIndentedListViewItemDataSource.IndentLevel">
      <summary>Get/Set the indentation level. 0 means no indentation.</summary>
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IIndentedListViewItemDataSource.IsExpanded">
      <summary>Get/Set true is item is expanded</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IIndentedListViewItemDataSource.IsSelected">
      <summary>Get/Set true is item is selected</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IndentedItemIndentLevelConverter">
      <summary>Convert from an indent level to the actual indent margin value.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IndentedItemIndentLevelConverter.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IndentedItemIndentLevelConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IndentedItemIndentLevelConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IndentedItemListView">
      <summary>IndentedItemListView</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IndentedItemListView.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IndentedItemListView.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IndentedItemListView.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
      <summary>Hooked to reroute MouseWheel to the parent element.</summary>
      <param name="e">mouse wheel arg</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IndentedItemListView.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
      <summary>Hooked to update IsSelected item state</summary>
      <param name="e">selection changed event arg</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IndentedItemListView.RerouteMouseWheel">
      <summary>Get/Set to true to indicate that the content does not need scrolling and to reroute MouseWheel event to the parent element. Get/Set to false (default) tells the ListView to process MouseWheel like regular.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IndentedItemListView.RerouteMouseWheelProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.IndentedItemListView.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl">
      <summary>ItemControl</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.AutomationHelpText">
      <summary>Get/Set the automation help text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.AutomationHelpTextProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.AutomationId">
      <summary>Get/Set the automation Id</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.AutomationIdProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.AutomationName">
      <summary>Get/Set the automation name</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.AutomationNameProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.IconVerticalAlignment">
      <summary>Get/Set the icon vertical alignment. Default is Center.</summary>
      <returns>Returns <see cref="T:System.Windows.VerticalAlignment" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.IconVerticalAlignmentProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.IsItemKeyboardFocusWithin">
      <summary>Get/Set true if the item has keyboard focus within</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.IsItemKeyboardFocusWithinProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.IsSelected">
      <summary>Get/Set true if the item is selected</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.IsSelectedProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.ItemIcon">
      <summary>Get/Set the icon bitmap</summary>
      <returns>Returns <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.ItemIconProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.OnCreateAutomationPeer">
      <returns>Returns <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.Text">
      <summary>Get/Set the main text (row1 main text)</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.TextInlines">
      <summary>Get/Set the main text inlines</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.TextInlinesProperty"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.TextProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.TextTrimming">
      <summary>Get/Set the text trimming style. Default is CharacterEllipsis.</summary>
      <returns>Returns <see cref="T:System.Windows.TextTrimming" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.TextTrimmingProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.TextWrapping">
      <summary>Get/Set the text wrapping style. Default is NoWrap.</summary>
      <returns>Returns <see cref="T:System.Windows.TextWrapping" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.ItemControl.TextWrappingProperty"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.StretchedItemTreeView"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.StretchedItemTreeView.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.StretchedItemTreeView.GetContainerForItemOverride">
      <returns>Returns <see cref="T:System.Windows.DependencyObject" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.StretchedItemTreeView.IsItemItsOwnContainerOverride(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.StretchedTreeViewItem"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.StretchedTreeViewItem.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.StretchedTreeViewItem.GetContainerForItemOverride">
      <returns>Returns <see cref="T:System.Windows.DependencyObject" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.StretchedTreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.StretchedTreeViewItem.NoIndentation">
      <summary>Get/Set true to hide the item's expander indentation</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.StretchedTreeViewItem.NoIndentationProperty"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink">
      <summary>TextLink</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.Command">
      <summary>Get/set the Command property.</summary>
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.CommandParameter">
      <summary>Get/set the CommandParameter property.</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.CommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.CommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.CommandTarget">
      <summary>Get/set the CommandTarget property.</summary>
      <returns>Returns <see cref="T:System.Windows.IInputElement" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.CommandTargetProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.IsLink">
      <summary>Get/Set true to treat the text as a clickable link</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.IsLinkProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.IsSelected">
      <summary>Get/Set true if the text is selected</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.IsSelectedProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.IsTextFocused">
      <summary>Get/Set true if the text is focused</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.IsTextFocusedProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.OnCreateAutomationPeer">
      <summary>OnCreateAutomationPeer override.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.Text">
      <summary>Get/Set the link text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.TextInlines">
      <summary>Get/Set the link text inlines</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.TextInlinesProperty"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.TextProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.TextTrimming">
      <summary>Get/Set the text trimming style. Default is CharacterEllipsis.</summary>
      <returns>Returns <see cref="T:System.Windows.TextTrimming" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.TextTrimmingProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.TextWrapping">
      <summary>Get/Set the text wrapping style. Default is NoWrap.</summary>
      <returns>Returns <see cref="T:System.Windows.TextWrapping" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.TextWrappingProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.VisibleOnlyWhenNotSelected">
      <summary>Get/Set true to show the text only when not selected</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.VisibleOnlyWhenNotSelectedProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.VisibleOnlyWhenSelected">
      <summary>Get/Set true to show the text only when it is selected</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.TextLink.VisibleOnlyWhenSelectedProperty"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerNavigationItemMetadata">
      <summary>ITeamExplorerNavigationItem metadata class used during plugin discovery.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerNavigationItemMetadata.Id">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerNavigationItemMetadata.Priority">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerNavigationItemMetadata.TargetPageId">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerNavigationLinkMetadata">
      <summary>ITeamExplorerNavigationLink metadata class used during plugin discovery.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerNavigationLinkMetadata.Id">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerNavigationLinkMetadata.ParentItemId">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerNavigationLinkMetadata.Priority">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerPageMetadata">
      <summary>ITeamExplorerPage metadata class used during plugin discovery.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerPageMetadata.Id">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerPageMetadata.ParentPageId">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerSectionMetadata">
      <summary>ITeamExplorerSection metadata class used during plugin discovery.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerSectionMetadata.Id">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerSectionMetadata.ParentPageId">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerSectionMetadata.PlacementParentPageId">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerSectionMetadata.PlacementPriority">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.ITeamExplorerSectionMetadata.Priority">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.PageControl">
      <summary>PageControl</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.PageControl.#ctor">
      <summary>Constructor.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.PageControl.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.PageControl.IsPageOrSectionBusy">
      <summary>Get/set the IsPageOrSectionBusy property.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.PageControl.IsPageOrSectionBusyProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.PageControl.MoveToVisibleSection(System.Int32,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.PageControl.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
      <summary>OnPreviewKeyDown override.</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.PageControl.Sections">
      <summary>Get/set the section collection.</summary>
      <returns>Returns <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.PageControl.SetFocusOnContent"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.PageControl.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl">
      <summary>SectionControl</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.Content">
      <summary>Get/Set the section content</summary>
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.ContentProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.ErrorText">
      <summary>Get/Set the error text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.ErrorWarningText">
      <summary>Get/Set the error/warning text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.ErrorWarningTextProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.ExpanderButtonVisibility">
      <summary>Get/Set the expander button visibility</summary>
      <returns>Returns <see cref="T:System.Windows.Visibility" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.ExpanderButtonVisibilityProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.HeaderText">
      <summary>Get/Set the section header text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.HeaderTextProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.HeaderToolTip"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.HeaderToolTipProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.InitializeComponent">
      <summary>InitializeComponent</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.IsBusy">
      <summary>Get/Set the busy spinner visibility</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.IsBusyProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.IsExpanded">
      <summary>Get/Set true/false to expand/collapse the section</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.IsExpandedProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.IsFocusOnFirstFocusableChild"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.IsSectionEmpty">
      <summary>Get/Set true to indicate that the section has no content</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.IsSectionEmptyProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.OnCollapsed">
      <summary>Called when the section is collapsed</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.OnExpanded">
      <summary>Called when the section is expanded</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.SetFocusOnContent"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.SetFocusOnHeader">
      <summary>Set focus to this section header</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.StateGridVisibility">
      <summary>Get/Set the state grid visibility. This includes the error, warning, and spinner images.</summary>
      <returns>Returns <see cref="T:System.Windows.Visibility" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.StateGridVisibilityProperty"></member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.System#Windows#Markup#IComponentConnector#Connect(System.Int32,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.SectionControl.WarningText">
      <summary>Get/Set the warning text</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.TextBlockWithEmbeddedLinks">
      <summary>This class was added here to handle displaying TFS style links in error messages or other types of notifications within Team Explorer. Any string with the form "Click [here](vstfs:///build/build/23) to open the build." will be displayed as "Click here to open the build." but the word here will be a hyperlink that will have a tooltip of the URI and when it is clicked will start IClientLinking.ExecuteDefaultAction on the URI. NOTE: TextBlock was subclassed because the Inlines property cannot be bound to.TODO_VNEXT: We may want to promote this class so that it can be used more widely if we find it generally useful.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.TextBlockWithEmbeddedLinks.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.TextBlockWithEmbeddedLinks.EmbeddedLinkCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.TextBlockWithEmbeddedLinks.EmbeddedLinkCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.TextBlockWithEmbeddedLinks.EmbeddedLinkCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.TextBlockWithEmbeddedLinks.EmbeddedLinkCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.TextBlockWithEmbeddedLinks.ShowTooltips">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.TextBlockWithEmbeddedLinks.ShowTooltipsProperty"></member>
    <member name="P:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.TextBlockWithEmbeddedLinks.TextWithEmbeddedLinks">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.Controls.WPF.TeamExplorer.Framework.TextBlockWithEmbeddedLinks.TextWithEmbeddedLinksProperty"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.AutoCompleteBehavior"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.AutoCompleteBehavior.AutoCompleteProvider"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.AutoCompleteBehavior.AutoCompleteProviderProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.AutoCompleteBehavior.GetAutoCompleteProvider(System.Windows.DependencyObject)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.AutoCompleteBehavior.SetAutoCompleteProvider(System.Windows.DependencyObject,Microsoft.TeamFoundation.MVVM.IAutoCompleteProvider)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.AutoCompleteManager"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.AutoCompleteManager.#ctor(Microsoft.TeamFoundation.MVVM.IAutoCompleteProvider)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.AutoCompleteManager.TextBox"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.BackgroundCommand"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BackgroundCommand.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BackgroundCommand.#ctor(System.Windows.Threading.Dispatcher)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BackgroundCommand.Cancel"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BackgroundCommand.CanExecute(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.MVVM.BackgroundCommand.CanExecuteChanged"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BackgroundCommand.CreateWorkerArgument">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BackgroundCommand.DoBackgroundWork(System.ComponentModel.DoWorkEventArgs)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BackgroundCommand.Execute(System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.BackgroundCommand.IsBusy">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.BackgroundCommand.IsBusyProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.BackgroundCommand.m_backroundWorker"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BackgroundCommand.OnBackgroundWorkCompleted(System.ComponentModel.RunWorkerCompletedEventArgs)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BackgroundCommand.PreExecuteValidate">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BackgroundCommand.RaiseCanExecuteChanged"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.BatchedObservableCollection`1">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BatchedObservableCollection`1.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BatchedObservableCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BatchedObservableCollection`1.AddRange(`0[])"></member>
    <member name="E:Microsoft.TeamFoundation.MVVM.BatchedObservableCollection`1.BatchedCollectionChanged"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BatchedObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BatchedObservableCollection`1.RemoveRange(System.Int32,System.Int32)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.BatchedObservableCollection`1.Reset(System.Collections.Generic.IEnumerable{`0})"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.CanExecuteDependsOnPropertyAttribute">
      <summary>Specifies that a property affects the CanExecute part of this command. When the property of the specified source changes, CanExecuteChanged event for the current command property will be raised also.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.CanExecuteDependsOnPropertyAttribute.#ctor(System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.CanExecuteDependsOnPropertyAttribute.PropertyName">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.CanExecuteDependsOnPropertyAttribute.TypeId">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.CollectionTransformation"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.CollectionTransformation.Transform``3(``0,System.Func`2,System.Boolean)">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.MVVM.TransformedCollection`3" />.</returns>
      <typeparam name="TSourceCollection"></typeparam>
      <typeparam name="TSourceElement"></typeparam>
      <typeparam name="TTargetElement"></typeparam>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ControlEvents"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ControlEvents.GetMouseDoubleClickCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ControlEvents.GetMouseDoubleClickCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ControlEvents.GetPreviewMouseDoubleClickCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ControlEvents.GetPreviewMouseDoubleClickCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ControlEvents.MouseDoubleClickCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ControlEvents.MouseDoubleClickCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.ControlEvents.MouseDoubleClickCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.ControlEvents.MouseDoubleClickCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ControlEvents.PreviewMouseDoubleClickCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ControlEvents.PreviewMouseDoubleClickCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.ControlEvents.PreviewMouseDoubleClickCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.ControlEvents.PreviewMouseDoubleClickCommandProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ControlEvents.SetMouseDoubleClickCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ControlEvents.SetMouseDoubleClickCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ControlEvents.SetPreviewMouseDoubleClickCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ControlEvents.SetPreviewMouseDoubleClickCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.DependsOnPropertyAttribute">
      <summary>Specifies that other properties affect the value of this property or the validation rule associated with this property. When one of the properties in the "depends on" list changes, PropertyChanged event for the current property will be raised also. This an abstract attribute - use either ValueDependsOnProperty or ValidationDependsOnProperty attributes.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DependsOnPropertyAttribute.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DependsOnPropertyAttribute.#ctor(System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DependsOnPropertyAttribute.#ctor(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DependsOnPropertyAttribute.#ctor(System.String,System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DependsOnPropertyAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.DependsOnPropertyAttribute.PropertyNames">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.DialogAssistant"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.DialogAssistant.DialogAssistantProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.DialogAssistant.DisableCloseButton">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.DialogAssistant.DisableCloseButtonProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.DialogAssistant.DisableContextHelp">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.DialogAssistant.DisableContextHelpProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DialogAssistant.GetDisableCloseButton(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DialogAssistant.GetDisableContextHelp(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DialogAssistant.GetHelpTopic(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DialogAssistant.GetSaveRestorePosition(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DialogAssistant.GetShowHelpButton(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DialogAssistant.GetUseModalDialogStyling(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.DialogAssistant.HelpTopic">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.DialogAssistant.HelpTopicProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.DialogAssistant.SaveRestorePosition">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.DialogAssistant.SaveRestorePositionProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DialogAssistant.SetDisableCloseButton(System.Windows.DependencyObject,System.Nullable{System.Boolean})"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DialogAssistant.SetDisableContextHelp(System.Windows.DependencyObject,System.Nullable{System.Boolean})"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DialogAssistant.SetHelpTopic(System.Windows.DependencyObject,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DialogAssistant.SetSaveRestorePosition(System.Windows.DependencyObject,System.Nullable{System.Boolean})"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DialogAssistant.SetShowHelpButton(System.Windows.DependencyObject,System.Nullable{System.Boolean})"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.DialogAssistant.SetUseModalDialogStyling(System.Windows.DependencyObject,System.Nullable{System.Boolean})"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.DialogAssistant.ShowHelpButton">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.DialogAssistant.ShowHelpButtonProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.DialogAssistant.UseModalDialogStyling">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.DialogAssistant.UseModalDialogStylingProperty"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.FrameworkElementBehaviors"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementBehaviors.GetIgnoreMouseWheel(System.Windows.FrameworkElement)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementBehaviors.IgnoreMouseWheel">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementBehaviors.IgnoreMouseWheelProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementBehaviors.SetIgnoreMouseWheel(System.Windows.FrameworkElement,System.Boolean)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ContextMenuClosingCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ContextMenuClosingCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ContextMenuClosingCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ContextMenuClosingCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ContextMenuOpeningCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ContextMenuOpeningCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ContextMenuOpeningCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ContextMenuOpeningCommandProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetContextMenuClosingCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetContextMenuClosingCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetContextMenuOpeningCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetContextMenuOpeningCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetLoadedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetLoadedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetRequestBringIntoViewCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetRequestBringIntoViewCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetSizeChangedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetSizeChangedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetToolTipClosingCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetToolTipClosingCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetToolTipOpeningCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetToolTipOpeningCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetUnloadedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.GetUnloadedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.LoadedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.LoadedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.LoadedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.LoadedCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.RequestBringIntoViewCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.RequestBringIntoViewCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.RequestBringIntoViewCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.RequestBringIntoViewCommandProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetContextMenuClosingCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetContextMenuClosingCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetContextMenuOpeningCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetContextMenuOpeningCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetLoadedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetLoadedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetRequestBringIntoViewCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetRequestBringIntoViewCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetSizeChangedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetSizeChangedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetToolTipClosingCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetToolTipClosingCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetToolTipOpeningCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetToolTipOpeningCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetUnloadedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SetUnloadedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SizeChangedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SizeChangedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SizeChangedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.SizeChangedCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ToolTipClosingCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ToolTipClosingCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ToolTipClosingCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ToolTipClosingCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ToolTipOpeningCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ToolTipOpeningCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ToolTipOpeningCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.ToolTipOpeningCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.UnloadedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.UnloadedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.UnloadedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.FrameworkElementEvents.UnloadedCommandProperty"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.HttpUriValidationRule"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.HttpUriValidationRule.#ctor(System.String,System.String,System.Boolean)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.HttpUriValidationRule.AllowHttps">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.HttpUriValidationRule.Validate(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.IAutoCompleteProvider"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IAutoCompleteProvider.GetSuggestions(System.String)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.IDialogService">
      <summary>An interface for the dialog result which allows for setting Window.DialogResult property from the viewModel. To use this service you must add the following lines to your xaml:</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.IDialogService.DialogResult">
      <summary>Gets or sets the dialog result value, which is the value that is returned from the ShowDialog method.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IDialogService.RequestClose">
      <summary>Closes the window, if Closing event is not canceled.</summary>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.IMessageBoxService">
      <summary>An interface for the message box service.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IMessageBoxService.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
      <returns>Returns <see cref="T:System.Windows.MessageBoxResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IMessageBoxService.ShowError(System.String,System.String)">
      <returns>Returns <see cref="T:System.Windows.MessageBoxResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IMessageBoxService.ShowException(System.Exception,System.String)">
      <returns>Returns <see cref="T:System.Windows.MessageBoxResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IMessageBoxService.ShowInformation(System.String,System.String)">
      <returns>Returns <see cref="T:System.Windows.MessageBoxResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IMessageBoxService.ShowWarning(System.String,System.String)">
      <returns>Returns <see cref="T:System.Windows.MessageBoxResult" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.IOwnedCommand">
      <summary>A command whose state is determined by some "owner" who in turn is responsible for raising the CanExecuteChanged event of the ICommand.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IOwnedCommand.RaiseCanExecuteChanged"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ItemDoubleClickEventArgs"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ItemDoubleClickEventArgs.#ctor(System.Object,System.Windows.Input.MouseButtonEventArgs)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ItemDoubleClickEventArgs.DoubleClickEventArgs">
      <returns>Returns <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ItemDoubleClickEventArgs.SelectedItem">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ItemsControlBehaviour">
      <summary>A behavior that allows for executing ICommand when user double-click on an item in the ItemsControl</summary>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ItemsControlBehaviour.DoubleClickOnLeftButtonOnly">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.ItemsControlBehaviour.DoubleClickOnLeftButtonOnlyProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ItemsControlBehaviour.GetDoubleClickOnLeftButtonOnly(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ItemsControlBehaviour.GetItemDoubleClickCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ItemsControlBehaviour.ItemDoubleClickCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.ItemsControlBehaviour.ItemDoubleClickCommandProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ItemsControlBehaviour.SetDoubleClickOnLeftButtonOnly(System.Windows.DependencyObject,System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ItemsControlBehaviour.SetItemDoubleClickCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.IUIHostService">
      <summary>An interface for the uihost service.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IUIHostService.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
      <returns>Returns <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IUIHostService.ShowError(System.String,System.String)">
      <returns>Returns <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IUIHostService.ShowException(System.Exception,System.String)">
      <returns>Returns <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IUIHostService.ShowInformation(System.String,System.String)">
      <returns>Returns <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IUIHostService.ShowModalDialog(System.Windows.Forms.Form)">
      <returns>Returns <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IUIHostService.ShowWarning(System.String,System.String)">
      <returns>Returns <see cref="T:System.Windows.Forms.DialogResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IUIHostService.WriteLine(Microsoft.TeamFoundation.Client.LogCategory,System.String)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.IWaitCursorService"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IWaitCursorService.GetWaitCursor">
      <returns>Returns <see cref="T:System.IDisposable" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.IWindowDisplayService"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IWindowDisplayService.Show(System.String,Microsoft.TeamFoundation.MVVM.ViewModelBase)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.IWindowDisplayService.ShowDialog(System.String,Microsoft.TeamFoundation.MVVM.ViewModelBase)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.GetSelectedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.GetSelectedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.GetUnselectedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.GetUnselectedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.SelectedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.SelectedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.SelectedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.SelectedCommandProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.SetSelectedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.SetSelectedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.SetUnselectedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.SetUnselectedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.UnselectedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.UnselectedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.UnselectedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.ListBoxItemEvents.UnselectedCommandProperty"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.MessageBoxArgs">
      <summary>A class that contains a property for each parameter of MessageBox.Show() method.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.MessageBoxArgs.#ctor"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.MessageBoxArgs.Button">
      <returns>Returns <see cref="T:System.Windows.MessageBoxButton" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.MessageBoxArgs.Caption">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.MessageBoxArgs.DefaultResult">
      <returns>Returns <see cref="T:System.Windows.MessageBoxResult" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.MessageBoxArgs.Icon">
      <returns>Returns <see cref="T:System.Windows.MessageBoxImage" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.MessageBoxArgs.MessageBoxText">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.MessageBoxArgs.Options">
      <returns>Returns <see cref="T:System.Windows.MessageBoxOptions" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.MessageBoxServiceBase"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.MessageBoxServiceBase.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.MessageBoxServiceBase.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
      <returns>Returns <see cref="T:System.Windows.MessageBoxResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.MessageBoxServiceBase.ShowError(System.String,System.String)">
      <returns>Returns <see cref="T:System.Windows.MessageBoxResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.MessageBoxServiceBase.ShowException(System.Exception,System.String)">
      <returns>Returns <see cref="T:System.Windows.MessageBoxResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.MessageBoxServiceBase.ShowInformation(System.String,System.String)">
      <returns>Returns <see cref="T:System.Windows.MessageBoxResult" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.MessageBoxServiceBase.ShowWarning(System.String,System.String)">
      <returns>Returns <see cref="T:System.Windows.MessageBoxResult" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.MVVMSupport">
      <summary>A mechanism that allows inserting core service into view model.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.MVVMSupport.GetViewModel(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.MVVMSupport.SetViewModel(System.Windows.DependencyObject,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.MVVMSupport.ViewModel">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.MVVMSupport.ViewModelProperty"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject">
      <summary>This class represent an object associated with dispatcher and implements INotifyPropertyChanged interface.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.#ctor">
      <summary>Initializes a new instance of the NotifyPropertyChangedDispatcherObject class.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.#ctor(System.Windows.Threading.Dispatcher)">
      <summary>Initializes a new instance of the NotifyPropertyChangedDispatcherObject class.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.AddDependencySource(System.String,System.Collections.Specialized.INotifyCollectionChanged)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.AddDependencySource(System.String,System.ComponentModel.INotifyPropertyChanged)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.CheckAccessBeginExecute(System.Action)">
      <summary>Executes the specified action on a thread associated with object's dispatcher. This invokes a BeginInvoke on the Dispatcher, does not wait for the action to complete -- returns immediately.</summary>
      <param name="action">An action to execute.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.CheckAccessExecute(System.Action)">
      <summary>Executes the specified action on a thread associated with object's dispatcher.</summary>
      <param name="action">An action to execute.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.CheckAccessExecute``1(System.Func`1)">
      <returns>Returns <see cref="{0}" />.</returns>
      <typeparam name="TResult"></typeparam>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.Dispatcher">
      <summary>Dispatcher associated with this object.</summary>
      <returns>Returns <see cref="T:System.Windows.Threading.Dispatcher" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.GetDependencySourceName(System.Collections.Specialized.INotifyCollectionChanged)">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.GetDependencySourceName(System.ComponentModel.INotifyPropertyChanged)">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.PropertyChanged">
      <summary>Occurs when a property value changes.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.RaisePropertyChanged(System.String)">
      <summary>Raises PropertyChanged event. This method can only be called on the thread associated with this object's dispatcher.</summary>
      <param name="propertyName">The name of the property that changed.</param>
      <exception cref="T:System.InvalidOperationException">The calling thread does not have access to this object.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.RemoveDependencySource(System.String,System.Collections.Specialized.INotifyCollectionChanged)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.RemoveDependencySource(System.String,System.ComponentModel.INotifyPropertyChanged)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.SetAndRaisePropertyChanged(System.Boolean@,System.Boolean,System.String)">
      <summary>A helper method that sets property value and raises PropertyChanged event if the value has changed. Optimized implementation for System.Boolean type.</summary>
      <returns>True if the property value has changed, false otherwise.</returns>
      <param name="propertyDataField">A reference to the data member which is used to store property value.</param>
      <param name="value">New property value.</param>
      <param name="propertyName">The name of the property.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.SetAndRaisePropertyChanged(System.Int32@,System.Int32,System.String)">
      <summary>A helper method that sets property value and raises PropertyChanged event if the value has changed. Optimized implementation for System.Int32 type.</summary>
      <returns>True if the property value has changed, false otherwise.</returns>
      <param name="propertyDataField">A reference to the data member which is used to store property value.</param>
      <param name="value">New property value.</param>
      <param name="propertyName">The name of the property.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.SetAndRaisePropertyChanged(System.String@,System.String,System.String)">
      <summary>A helper method that sets property value and raises PropertyChanged event if the value has changed. Optimized implementation for string type.</summary>
      <returns>True if the property value has changed, false otherwise.</returns>
      <param name="propertyDataField">A reference to the data member which is used to store property value.</param>
      <param name="value">New property value.</param>
      <param name="propertyName">The name of the property.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.SetAndRaisePropertyChanged``1(``0@,``0,System.String)">
      <summary>A helper method that sets property value and raises PropertyChanged event if the value has changed.</summary>
      <returns>True if the property value has changed, false otherwise.</returns>
      <param name="propertyDataField">A reference to the data member which is used to store property value.</param>
      <param name="value">New property value.</param>
      <param name="propertyName">The name of the property.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.NotifyPropertyChangedDispatcherObject.VerifyAccess">
      <summary>Enforces that the calling thread has access to this object.</summary>
      <exception cref="T:System.InvalidOperationException">The calling thread does not have access to this object.</exception>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.OpenDocumentCommand">
      <summary>An abstract command that allows for opening documents with their default application.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenDocumentCommand.#ctor(Microsoft.TeamFoundation.MVVM.IMessageBoxService)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenDocumentCommand.CanExecute(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.MVVM.OpenDocumentCommand.CanExecuteChanged"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenDocumentCommand.Execute(System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.OpenDocumentCommand.MessageBoxService">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.MVVM.IMessageBoxService" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenDocumentCommand.OpenTextFile(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenDocumentCommand.OpenUrl(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenDocumentCommand.OpenWithDefaultApplication(System.String,System.String)">
      <summary>Opens the specified document or url using default application assosicated with that document type. If no program is associated with the specified document type, this method will try to open the document by using the fallbackApplication.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenDocumentCommand.RaiseCanExecuteChanged"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.OpenFWLinkCommand">
      <summary>A command that opens FWLinks in the browser. A linkId can be passed as a constructor parameter or command parameter in xaml.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenFWLinkCommand.#ctor(System.Int32,Microsoft.TeamFoundation.MVVM.IMessageBoxService)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenFWLinkCommand.TryGetNavigateUrl(System.Object,System.String@)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.OpenUrlCommand">
      <summary>A command that opens specified http or https address in the brower. A navigate Url can be passed into constructor or as command parameter in xaml.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenUrlCommand.#ctor(Microsoft.TeamFoundation.MVVM.IMessageBoxService)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenUrlCommand.#ctor(System.Uri,Microsoft.TeamFoundation.MVVM.IMessageBoxService)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenUrlCommand.CanExecute(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenUrlCommand.Execute(System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.OpenUrlCommand.TryGetNavigateUrl(System.Object,System.String@)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ParameterConvertingCommand"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ParameterConvertingCommand.#ctor(System.Windows.Input.ICommand,System.Func`2)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ParameterConvertingCommand.CanExecute(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.MVVM.ParameterConvertingCommand.CanExecuteChanged"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ParameterConvertingCommand.Execute(System.Object)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.PasswordBoxAssistant"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.PasswordBoxAssistant.GetPassword(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.PasswordBoxAssistant.Password">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.PasswordBoxAssistant.PasswordProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.PasswordBoxAssistant.SetPassword(System.Windows.DependencyObject,System.String)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.RegisterWindow">
      <summary>Allows registering windows for WindowsDisplayService.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.RegisterWindow.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.RegisterWindow.#ctor(System.Type)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.RegisterWindow.Type">
      <returns>Returns <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.RelayCommand">
      <summary>A command whose sole purpose is to relay its functionality to other objects by invoking delegates. The default return value for the CanExecute method is 'true'.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.RelayCommand.#ctor(System.Action)">
      <summary>Creates a new command that can always execute.</summary>
      <param name="execute">The execution logic.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.RelayCommand.#ctor(System.Action{System.Object})">
      <summary>Creates a new command that can always execute.</summary>
      <param name="execute">The execution logic.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.RelayCommand.#ctor(System.Action{System.Object},System.Predicate{System.Object})">
      <summary>Creates a new command.</summary>
      <param name="execute">The execution logic.</param>
      <param name="canExecute">The execution status logic.</param>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.RelayCommand.CanExecute(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="E:Microsoft.TeamFoundation.MVVM.RelayCommand.CanExecuteChanged">
      <summary>Raised when CanExecute changes.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.RelayCommand.Execute(System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.RelayCommand.IsExecuting">
      <summary>True if command is executing, false otherwise.</summary>
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.RelayCommand.IsExecutingProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.RelayCommand.RaiseCanExecuteChanged"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.RelayValidationRule"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.RelayValidationRule.#ctor(System.String,System.Func`2)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.RelayValidationRule.#ctor(System.String,System.String,System.Func`2)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.RelayValidationRule.Validate(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.SelectorBehaviors"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorBehaviors.GetSelectNextOnRemove(System.Windows.Controls.Primitives.Selector)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.SelectorBehaviors.SelectNextOnRemove">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.SelectorBehaviors.SelectNextOnRemoveProperty">
      <summary>When this property is set, if the selected item(s) are removed, selection is automatically moved to the next item.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorBehaviors.SetSelectNextOnRemove(System.Windows.Controls.Primitives.Selector,System.Boolean)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.SelectorEvents"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorEvents.GetSelectedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorEvents.GetSelectedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorEvents.GetSelectionChangedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorEvents.GetSelectionChangedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorEvents.GetUnselectedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorEvents.GetUnselectedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.SelectorEvents.SelectedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.SelectorEvents.SelectedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.SelectorEvents.SelectedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.SelectorEvents.SelectedCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.SelectorEvents.SelectionChangedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.SelectorEvents.SelectionChangedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.SelectorEvents.SelectionChangedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.SelectorEvents.SelectionChangedCommandProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorEvents.SetSelectedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorEvents.SetSelectedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorEvents.SetSelectionChangedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorEvents.SetSelectionChangedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorEvents.SetUnselectedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SelectorEvents.SetUnselectedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.SelectorEvents.UnselectedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.SelectorEvents.UnselectedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.SelectorEvents.UnselectedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.SelectorEvents.UnselectedCommandProperty"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ServiceNotFoundException"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ServiceNotFoundException.#ctor"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ServiceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ServiceNotFoundException.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ServiceNotFoundException.#ctor(System.String,System.Exception)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.SqlServerFileSytemAutoCompleteProvider"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SqlServerFileSytemAutoCompleteProvider.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.SqlServerFileSytemAutoCompleteProvider.GetSuggestions(System.String)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.StringNotNullOrWhiteSpaceValidationRule">
      <summary>Validates that string property is not null or white space string. Property type must be string.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.StringNotNullOrWhiteSpaceValidationRule.#ctor(System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.StringNotNullOrWhiteSpaceValidationRule.Validate(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.TransformedCollection`3">
      <summary>Provides a live transformation of elements from a mutable source collection.</summary>
      <typeparam name="TSourceCollection">The type of the source collection that this collection wraps.</typeparam>
      <typeparam name="TSourceElement">The type of the elements in the source collection.</typeparam>
      <typeparam name="TTargetElement">The type of the transformed elements in this collection.</typeparam>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TransformedCollection`3.#ctor(`0,System.Func`2,System.Boolean)"></member>
    <member name="E:Microsoft.TeamFoundation.MVVM.TransformedCollection`3.CollectionChanged">
      <summary>Occurs when the collection changes.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TransformedCollection`3.Dispose">
      <summary>Tears down all elements of the transformed collection, clears the transformed collection, and stops listening to change events on the source collection.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TransformedCollection`3.Dispose(System.Boolean)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TransformedCollection`3.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TransformedCollection`3.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)"></member>
    <member name="E:Microsoft.TeamFoundation.MVVM.TransformedCollection`3.PropertyChanged">
      <summary>Occurs when a property changes.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TransformedCollection`3.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TransformedCollection`3.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.TreeViewBehaviors"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewBehaviors.GetSelectNextOnRemove(System.Windows.Controls.TreeView)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.TreeViewBehaviors.SelectNextOnRemove">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.TreeViewBehaviors.SelectNextOnRemoveProperty">
      <summary>When this property is set, if the selected item(s) are removed, selection is automatically moved to the next item.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewBehaviors.SetSelectNextOnRemove(System.Windows.Controls.TreeView,System.Boolean)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.TreeViewItemBehaviors"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemBehaviors.GetSelectAndFocusOnRightClick(System.Windows.Controls.TreeViewItem)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.TreeViewItemBehaviors.SelectAndFocusOnRightClick">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.TreeViewItemBehaviors.SelectAndFocusOnRightClickProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemBehaviors.SetSelectAndFocusOnRightClick(System.Windows.Controls.TreeViewItem,System.Boolean)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.CollapsedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.CollapsedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.CollapsedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.CollapsedCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.ExpandedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.ExpandedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.ExpandedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.ExpandedCommandProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.GetCollapsedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.GetCollapsedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.GetExpandedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.GetExpandedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.GetSelectedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.GetSelectedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.GetUnselectedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.GetUnselectedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.SelectedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.SelectedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.SelectedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.SelectedCommandProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.SetCollapsedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.SetCollapsedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.SetExpandedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.SetExpandedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.SetSelectedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.SetSelectedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.SetUnselectedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.SetUnselectedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.UnselectedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.UnselectedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.UnselectedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.TreeViewItemEvents.UnselectedCommandProperty"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.UIElementEvents"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.DragEnterCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.DragEnterCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.DragEnterCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.DragEnterCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.DragLeaveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.DragLeaveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.DragLeaveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.DragLeaveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.DragOverCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.DragOverCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.DragOverCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.DragOverCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.DropCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.DropCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.DropCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.DropCommandProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetDragEnterCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetDragEnterCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetDragLeaveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetDragLeaveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetDragOverCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetDragOverCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetDropCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetDropCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetGiveFeedbackCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetGiveFeedbackCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetGotFocusCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetGotFocusCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetGotKeyboardFocusCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetGotKeyboardFocusCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetGotMouseCaptureCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetGotMouseCaptureCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetGotStylusCaptureCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetGotStylusCaptureCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetGotTouchCaptureCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetGotTouchCaptureCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetKeyDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetKeyDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetKeyUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetKeyUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostFocusCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostFocusCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostFocusWithinCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostFocusWithinCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostKeyboardFocusCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostKeyboardFocusCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostKeyboardFocusWithinCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostKeyboardFocusWithinCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostMouseCaptureCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostMouseCaptureCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostStylusCaptureCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostStylusCaptureCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostTouchCaptureCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetLostTouchCaptureCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetManipulationBoundaryFeedbackCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetManipulationBoundaryFeedbackCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetManipulationCompletedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetManipulationCompletedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetManipulationDeltaCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetManipulationDeltaCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetManipulationInertiaStartingCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetManipulationInertiaStartingCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetManipulationStartedCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetManipulationStartedCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetManipulationStartingCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetManipulationStartingCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseEnterCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseEnterCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseLeaveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseLeaveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseLeftButtonDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseLeftButtonDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseLeftButtonUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseLeftButtonUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseMoveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseMoveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseRightButtonDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseRightButtonDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseRightButtonUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseRightButtonUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseWheelCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetMouseWheelCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewDragEnterCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewDragEnterCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewDragLeaveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewDragLeaveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewDragOverCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewDragOverCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewDropCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewDropCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewGiveFeedbackCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewGiveFeedbackCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewGotKeyboardFocusCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewGotKeyboardFocusCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewKeyDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewKeyDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewKeyUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewKeyUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewLostKeyboardFocusCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewLostKeyboardFocusCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseLeftButtonDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseLeftButtonDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseLeftButtonUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseLeftButtonUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseMoveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseMoveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseRightButtonDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseRightButtonDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseRightButtonUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseRightButtonUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseWheelCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewMouseWheelCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewQueryContinueDragCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewQueryContinueDragCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusButtonDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusButtonDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusButtonUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusButtonUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusInAirMoveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusInAirMoveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusInRangeCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusInRangeCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusMoveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusMoveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusOutOfRangeCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusOutOfRangeCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusSystemGestureCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusSystemGestureCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewStylusUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewTextInputCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewTextInputCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewTouchDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewTouchDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewTouchMoveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewTouchMoveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewTouchUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetPreviewTouchUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetQueryContinueDragCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetQueryContinueDragCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetQueryCursorCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetQueryCursorCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusButtonDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusButtonDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusButtonUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusButtonUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusEnterCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusEnterCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusInAirMoveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusInAirMoveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusInRangeCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusInRangeCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusLeaveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusLeaveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusMoveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusMoveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusOutOfRangeCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusOutOfRangeCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusSystemGestureCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusSystemGestureCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetStylusUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetTextInputCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetTextInputCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetTouchDownCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetTouchDownCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetTouchEnterCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetTouchEnterCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetTouchLeaveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetTouchLeaveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetTouchMoveCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetTouchMoveCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetTouchUpCommand(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.GetTouchUpCommandParameter(System.Windows.DependencyObject)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.GiveFeedbackCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.GiveFeedbackCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.GiveFeedbackCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.GiveFeedbackCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotFocusCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotFocusCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotFocusCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotFocusCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotKeyboardFocusCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotKeyboardFocusCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotKeyboardFocusCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotKeyboardFocusCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotMouseCaptureCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotMouseCaptureCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotMouseCaptureCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotMouseCaptureCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotStylusCaptureCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotStylusCaptureCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotStylusCaptureCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotStylusCaptureCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotTouchCaptureCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotTouchCaptureCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotTouchCaptureCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.GotTouchCaptureCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.KeyDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.KeyDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.KeyDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.KeyDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.KeyUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.KeyUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.KeyUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.KeyUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostFocusCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostFocusCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostFocusCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostFocusCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostFocusWithinCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostFocusWithinCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostFocusWithinCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostFocusWithinCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostKeyboardFocusCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostKeyboardFocusCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostKeyboardFocusCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostKeyboardFocusCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostKeyboardFocusWithinCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostKeyboardFocusWithinCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostKeyboardFocusWithinCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostKeyboardFocusWithinCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostMouseCaptureCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostMouseCaptureCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostMouseCaptureCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostMouseCaptureCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostStylusCaptureCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostStylusCaptureCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostStylusCaptureCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostStylusCaptureCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostTouchCaptureCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostTouchCaptureCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostTouchCaptureCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.LostTouchCaptureCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationBoundaryFeedbackCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationBoundaryFeedbackCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationBoundaryFeedbackCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationBoundaryFeedbackCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationCompletedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationCompletedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationCompletedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationCompletedCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationDeltaCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationDeltaCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationDeltaCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationDeltaCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationInertiaStartingCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationInertiaStartingCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationInertiaStartingCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationInertiaStartingCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationStartedCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationStartedCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationStartedCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationStartedCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationStartingCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationStartingCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationStartingCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.ManipulationStartingCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseEnterCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseEnterCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseEnterCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseEnterCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseLeaveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseLeaveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseLeaveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseLeaveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseLeftButtonDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseLeftButtonDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseLeftButtonDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseLeftButtonDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseLeftButtonUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseLeftButtonUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseLeftButtonUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseLeftButtonUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseMoveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseMoveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseMoveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseMoveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseRightButtonDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseRightButtonDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseRightButtonDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseRightButtonDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseRightButtonUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseRightButtonUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseRightButtonUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseRightButtonUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseWheelCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseWheelCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseWheelCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.MouseWheelCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDragEnterCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDragEnterCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDragEnterCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDragEnterCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDragLeaveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDragLeaveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDragLeaveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDragLeaveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDragOverCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDragOverCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDragOverCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDragOverCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDropCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDropCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDropCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewDropCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewGiveFeedbackCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewGiveFeedbackCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewGiveFeedbackCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewGiveFeedbackCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewGotKeyboardFocusCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewGotKeyboardFocusCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewGotKeyboardFocusCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewGotKeyboardFocusCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewKeyDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewKeyDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewKeyDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewKeyDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewKeyUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewKeyUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewKeyUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewKeyUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewLostKeyboardFocusCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewLostKeyboardFocusCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewLostKeyboardFocusCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewLostKeyboardFocusCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseLeftButtonDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseLeftButtonDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseLeftButtonDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseLeftButtonDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseLeftButtonUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseLeftButtonUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseLeftButtonUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseLeftButtonUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseMoveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseMoveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseMoveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseMoveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseRightButtonDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseRightButtonDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseRightButtonDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseRightButtonDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseRightButtonUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseRightButtonUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseRightButtonUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseRightButtonUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseWheelCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseWheelCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseWheelCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewMouseWheelCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewQueryContinueDragCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewQueryContinueDragCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewQueryContinueDragCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewQueryContinueDragCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusButtonDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusButtonDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusButtonDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusButtonDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusButtonUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusButtonUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusButtonUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusButtonUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusInAirMoveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusInAirMoveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusInAirMoveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusInAirMoveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusInRangeCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusInRangeCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusInRangeCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusInRangeCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusMoveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusMoveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusMoveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusMoveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusOutOfRangeCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusOutOfRangeCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusOutOfRangeCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusOutOfRangeCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusSystemGestureCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusSystemGestureCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusSystemGestureCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusSystemGestureCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewStylusUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTextInputCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTextInputCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTextInputCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTextInputCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTouchDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTouchDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTouchDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTouchDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTouchMoveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTouchMoveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTouchMoveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTouchMoveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTouchUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTouchUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTouchUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.PreviewTouchUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.QueryContinueDragCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.QueryContinueDragCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.QueryContinueDragCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.QueryContinueDragCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.QueryCursorCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.QueryCursorCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.QueryCursorCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.QueryCursorCommandProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetDragEnterCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetDragEnterCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetDragLeaveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetDragLeaveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetDragOverCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetDragOverCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetDropCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetDropCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetGiveFeedbackCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetGiveFeedbackCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetGotFocusCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetGotFocusCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetGotKeyboardFocusCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetGotKeyboardFocusCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetGotMouseCaptureCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetGotMouseCaptureCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetGotStylusCaptureCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetGotStylusCaptureCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetGotTouchCaptureCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetGotTouchCaptureCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetKeyDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetKeyDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetKeyUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetKeyUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostFocusCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostFocusCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostFocusWithinCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostFocusWithinCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostKeyboardFocusCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostKeyboardFocusCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostKeyboardFocusWithinCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostKeyboardFocusWithinCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostMouseCaptureCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostMouseCaptureCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostStylusCaptureCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostStylusCaptureCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostTouchCaptureCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetLostTouchCaptureCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetManipulationBoundaryFeedbackCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetManipulationBoundaryFeedbackCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetManipulationCompletedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetManipulationCompletedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetManipulationDeltaCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetManipulationDeltaCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetManipulationInertiaStartingCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetManipulationInertiaStartingCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetManipulationStartedCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetManipulationStartedCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetManipulationStartingCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetManipulationStartingCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseEnterCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseEnterCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseLeaveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseLeaveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseLeftButtonDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseLeftButtonDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseLeftButtonUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseLeftButtonUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseMoveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseMoveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseRightButtonDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseRightButtonDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseRightButtonUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseRightButtonUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseWheelCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetMouseWheelCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewDragEnterCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewDragEnterCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewDragLeaveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewDragLeaveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewDragOverCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewDragOverCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewDropCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewDropCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewGiveFeedbackCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewGiveFeedbackCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewGotKeyboardFocusCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewGotKeyboardFocusCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewKeyDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewKeyDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewKeyUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewKeyUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewLostKeyboardFocusCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewLostKeyboardFocusCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseLeftButtonDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseLeftButtonDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseLeftButtonUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseLeftButtonUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseMoveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseMoveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseRightButtonDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseRightButtonDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseRightButtonUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseRightButtonUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseWheelCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewMouseWheelCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewQueryContinueDragCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewQueryContinueDragCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusButtonDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusButtonDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusButtonUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusButtonUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusInAirMoveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusInAirMoveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusInRangeCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusInRangeCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusMoveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusMoveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusOutOfRangeCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusOutOfRangeCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusSystemGestureCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusSystemGestureCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewStylusUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewTextInputCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewTextInputCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewTouchDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewTouchDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewTouchMoveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewTouchMoveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewTouchUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetPreviewTouchUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetQueryContinueDragCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetQueryContinueDragCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetQueryCursorCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetQueryCursorCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusButtonDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusButtonDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusButtonUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusButtonUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusEnterCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusEnterCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusInAirMoveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusInAirMoveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusInRangeCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusInRangeCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusLeaveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusLeaveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusMoveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusMoveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusOutOfRangeCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusOutOfRangeCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusSystemGestureCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusSystemGestureCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetStylusUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetTextInputCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetTextInputCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetTouchDownCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetTouchDownCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetTouchEnterCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetTouchEnterCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetTouchLeaveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetTouchLeaveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetTouchMoveCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetTouchMoveCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetTouchUpCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIElementEvents.SetTouchUpCommandParameter(System.Windows.DependencyObject,System.Object)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusButtonDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusButtonDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusButtonDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusButtonDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusButtonUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusButtonUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusButtonUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusButtonUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusEnterCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusEnterCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusEnterCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusEnterCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusInAirMoveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusInAirMoveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusInAirMoveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusInAirMoveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusInRangeCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusInRangeCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusInRangeCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusInRangeCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusLeaveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusLeaveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusLeaveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusLeaveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusMoveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusMoveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusMoveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusMoveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusOutOfRangeCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusOutOfRangeCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusOutOfRangeCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusOutOfRangeCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusSystemGestureCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusSystemGestureCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusSystemGestureCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusSystemGestureCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.StylusUpCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.TextInputCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.TextInputCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.TextInputCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.TextInputCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchDownCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchDownCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchDownCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchDownCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchEnterCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchEnterCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchEnterCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchEnterCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchLeaveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchLeaveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchLeaveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchLeaveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchMoveCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchMoveCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchMoveCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchMoveCommandProperty"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchUpCommand">
      <returns>Returns <see cref="T:System.Windows.Input.ICommand" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchUpCommandParameter">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchUpCommandParameterProperty"></member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIElementEvents.TouchUpCommandProperty"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.UIService"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIService.#ctor(System.Windows.FrameworkElement)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIService.GetOwnerWindow">
      <returns>Returns <see cref="T:System.Windows.Window" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.UIService.GetOwnerWindow(System.Windows.FrameworkElement)">
      <returns>Returns <see cref="T:System.Windows.Window" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.UIService.m_ownerElement"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ValidatingViewModelBase">
      <summary>A view model that support validation.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidatingViewModelBase.#ctor(Microsoft.TeamFoundation.MVVM.ViewModelBase)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidatingViewModelBase.#ctor(System.Windows.Threading.Dispatcher,Microsoft.TeamFoundation.MVVM.ViewModelBase)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidatingViewModelBase.HasErrors">
      <summary>Checks if at least one validation rule is broken.</summary>
      <returns>True if no validation rule is broken, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ValidatingViewModelBase.System#ComponentModel#IDataErrorInfo#Error">
      <summary>Gets an error message indicating what is wrong with this object.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ValidatingViewModelBase.System#ComponentModel#IDataErrorInfo#Item(System.String)">
      <summary>Gets the error message for the property that has the given name.</summary>
      <returns>The error message for the property. The default is an empty string ("").</returns>
      <param name="propertyName">he name of the property whose error message to obtain.</param>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ValidatingViewModelBase.ValidationRules">
      <summary>A collection of validation rules.</summary>
      <returns>Returns <see cref="T:System.Collections.Generic.List`1" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ValidationDependsOnPropertyAttribute">
      <summary>Specifies that other properties affect the validation rule that is associated with this property. When one of the properties in the "depends on" list changes, PropertyChanged event for the current property will be raised also.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidationDependsOnPropertyAttribute.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidationDependsOnPropertyAttribute.#ctor(System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidationDependsOnPropertyAttribute.#ctor(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidationDependsOnPropertyAttribute.#ctor(System.String,System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidationDependsOnPropertyAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ValidationRule"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidationRule.#ctor(System.String,System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ValidationRule.Error">
      <summary>A descriptive text about the error. This property is only applicable if the rule is broken.</summary>
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidationRule.GetHashCode">
      <returns>Returns <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidationRule.GetPropertyValue``1(System.Object)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidationRule.GetPropertyValue(System.Object)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ValidationRule.PropertyName">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidationRule.ToString">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValidationRule.Validate(System.Object)">
      <summary>Validates the rule.</summary>
      <returns>true if the rule has been followed; false otherwise.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ValueDependsOnCollectionAttribute">
      <summary>Specifies that a collection affects the value of this property. When the associated collection changes, PropertyChanged event for the current property will be raised also.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValueDependsOnCollectionAttribute.#ctor(System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ValueDependsOnCollectionAttribute.SourceName">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ValueDependsOnCollectionAttribute.TypeId">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ValueDependsOnExternalPropertyAttribute">
      <summary>Specifies that external properties affect the value of this one. When the property of the specified source changes, PropertyChanged event for the current property will be raised also.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValueDependsOnExternalPropertyAttribute.#ctor(System.String,System.String)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ValueDependsOnExternalPropertyAttribute.PropertyName">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ValueDependsOnExternalPropertyAttribute.SourceName">
      <returns>Returns <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ValueDependsOnExternalPropertyAttribute.TypeId">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ValueDependsOnPropertyAttribute">
      <summary>Specifies that other properties affect the value of this one. When one of the properties in the "depends on" list changes, PropertyChanged event for the current property will be raised also.</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValueDependsOnPropertyAttribute.#ctor(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValueDependsOnPropertyAttribute.#ctor(System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValueDependsOnPropertyAttribute.#ctor(System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValueDependsOnPropertyAttribute.#ctor(System.String,System.String,System.String,System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ValueDependsOnPropertyAttribute.#ctor(System.String,System.String,System.String,System.String,System.String)"></member>
    <member name="T:Microsoft.TeamFoundation.MVVM.ViewModelBase"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ViewModelBase.#ctor(Microsoft.TeamFoundation.MVVM.ViewModelBase)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ViewModelBase.#ctor(System.Windows.Threading.Dispatcher,Microsoft.TeamFoundation.MVVM.ViewModelBase)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ViewModelBase.GetWaitCursor">
      <returns>Returns <see cref="T:System.IDisposable" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ViewModelBase.MessageBoxService">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.MVVM.IMessageBoxService" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ViewModelBase.ParentViewModel">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.MVVM.ViewModelBase" />.</returns>
    </member>
    <member name="F:Microsoft.TeamFoundation.MVVM.ViewModelBase.ParentViewModelProperty"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ViewModelBase.RaisePropertyChanged(System.String)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ViewModelBase.RegisterService(System.Object)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ViewModelBase.RegisterServices(System.Collections.IEnumerable)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ViewModelBase.ResolveService``1">
      <summary>Resolves the service.</summary>
      <returns>Returns <see cref="T:System.IDisposable" />.</returns>
      <typeparam name="TService"></typeparam>
      <exception cref="T:Microsoft.TeamFoundation.MVVM.ServiceNotFoundException">Service not registerd.</exception>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ViewModelBase.TryResolveService``1">
      <returns>Returns <see cref="T:System.Object" />.</returns>
      <typeparam name="TService"></typeparam>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ViewModelBase.TryResolveService(System.Type)">
      <returns>Returns <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ViewModelBase.UIHostService">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.MVVM.IUIHostService" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ViewModelBase.UnRegisterService(System.Object)">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.ViewModelBase.UnRegisterServices(System.Collections.IEnumerable)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.ViewModelBase.WindowDisplayService">
      <returns>Returns <see cref="T:Microsoft.TeamFoundation.MVVM.IWindowDisplayService" />.</returns>
    </member>
    <member name="T:Microsoft.TeamFoundation.MVVM.WindowViewModel"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.WindowViewModel.#ctor(Microsoft.TeamFoundation.MVVM.ViewModelBase)"></member>
    <member name="M:Microsoft.TeamFoundation.MVVM.WindowViewModel.#ctor(System.Windows.Threading.Dispatcher,Microsoft.TeamFoundation.MVVM.ViewModelBase)"></member>
    <member name="P:Microsoft.TeamFoundation.MVVM.WindowViewModel.DialogResult">
      <returns>Returns <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.WindowViewModel.OnWindowActivated">
      <summary>Allows Window.Activated hook</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.WindowViewModel.OnWindowClosed">
      <summary>Allows Window.Closed hook</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.WindowViewModel.OnWindowClosing(System.ComponentModel.CancelEventArgs)">
      <summary>Allows Window.OnClosing hook</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.WindowViewModel.OnWindowDeactivated">
      <summary>Allows Window.Deactivated hook</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.WindowViewModel.OnWindowLoaded">
      <summary>Allows Window.Loaded/UserControl.Loaded hook</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.WindowViewModel.OnWindowUnloaded">
      <summary>Allows Window.Unloaded/UserControl.Unloaded hook</summary>
    </member>
    <member name="M:Microsoft.TeamFoundation.MVVM.WindowViewModel.RequestClose"></member>
  </members>
</doc>